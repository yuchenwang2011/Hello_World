1. C# vs .NET
   C# is the programming language
   .Net is the framework for building applications on Windows
   .NET is used to be compared with JVM.

2. .NET has 2 main components:
   CLR: Common Language Runtime. It makes it possible for C# code to run on different hardware different platforms.
   Class Library

3. C# learned the idea from Java that JVM translate the code to byte code to be able to run universally.
   C# translate code to IL(Intermediate Language) then through CLR, it's converted to the native code the computer uses.
   https://en.wikipedia.org/wiki/File:CLR_diag.svg

4. C# groups classes by namespace, just like Java uses package. but there are some differences. see this link
   http://www.javacamp.org/javavscsharp/namespace.html

5. JIT Compilation is the compilation of IL code to machine code at runtime. JIT is short for Just In Time compilation. 

6. The console project is the simplest project to work on. To print a hello word same as in Java.
   Use: console.Writeline("Hello world"); 
   Here is a trick: type cw then tap, you can have this automate finished.
   (The method auto popup is called IntelliSense in C#)
   
7. ReSharper is a very useful tool to improve Visual studio productivity, which gives you 30 days free trial.

8. What is an assembly?
   A single unit of deployment of .net applications. It's a file, in the form of an executable or a DLL, that contains 
   many classes and namespaces. When you have more and more namespaces, you can put relavent namespaces together as 
   an assembly. An EXE file is a program to be executed. DLL is a file that includes code that to be re-used across 
   different programs. 
   
9. Variables and Constants
   int num; int Number = 1; //C# is case sensitive, num and Number are different
   const float Pi = 3.14f;
   Coding convention in C#: local variables --> Camel case  int number = 1;
                            constants       --> Pascal case const int MaxZoom = 5;

10. Primitives in C#: 9 common types (8 same as JAVA, but has one more "decimal", C# has even some more but less commonly used)
    bool, char, byte, short, int, long, float, double, decimal
    in C#, you can use "var" to instead of them, compiler will automatically identify them to the most possible data type.
    
11. byte num = 255; num = num + 1; //this will cause overflow
    checked {byte num = 255; num = num + 1;} //this will not overflow but throw an Exception
    
12. Some shortcut: 
    Then press ctrl + F5 to run.
    To simply compile, you use Ctrl + Shift + B
    To delete current line at the cursor: Ctrl + x
    To go to the defination of the structure, Ctrl + Mouse Left Click
    
13. Console.WriteLine("{0} {1}", byte.Min_Value, byte.Max_Value); //C# syntax
14. To do a type convert, you can use Convert. api.

15. String: 
    C# has a verbatim string which allows you to get rid of double slashes, for instance
    string s = "C:\\try\\try1\\try3";
    string s2= @"C:\try\try1\try3"; //here string is a struct, but you can use class String s = xx; capital S
    string s3 = "a\nb\nc";
    string s4 = @"a
                  b 
                  c";
    var c = s2[0];

16. Two main categories in C#: 
    Classes: Arrays, Strings, your own classes
    Structures: Primitive types, your own structures

17. Delegates are used to pass methods as arguments to other methods. Using a delegate allows to encapsulate a
    reference to a method inside a delegate object. The delegate object can then be passed to code which can call the referenced 
    method, without having to know at compile time which method will be invoked. 
    
