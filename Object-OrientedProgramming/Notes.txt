This file is the note I took during preparing OO concepts and some Java knowledge.

Basic concepts:
1. Object-oriented programming lets you extend a program without having to touch previously testd, working code. 

2. Instance variables are things an object knows about itself. They represent the state of an object. 

3. public static void main, static here means that method can be run without instantiate an instance of main. static variables and methods belongs to the class not a specific instance.

4. 8 Java primitive types: Be careful! Bears shoudn't ingest large fury dogs. 
                        boolean, char, byte, short,   int,  long, float, double 

5. Java is pass by value, means pass by copy. 
   int x = 7; foo.go(x);
   go() won't change the value of x because go() was given a copy of x;

6. Java has 4 OOP concepts: a pie: Abstraction, Polymorphism, Inheritance, Encapsulation
   Encapsulation: also known as data hiding, instance variables of a class is hiden from other classes and it's only accessable by methods in current class.
                  The variables of a class is private and only can be accessed and and modified by getter and setter.

7. When you instanciate an array, Dog[] myDog = new Dog[7]; //here Dog[0], Dog[1] is still reference
   You need myDog[0] = new Dog(); myDog[1] = new Dog();

8. null is not an object, it's a reference.

9. Java Access Levels
   Modifier	  Class	Package	Subclass	World
   public	      Y	    Y	       Y	      Y
   protected	  Y	    Y	       Y	      N
   no modifier	Y	    Y      	 N	      N
   private	    Y	    N	       N	      N
