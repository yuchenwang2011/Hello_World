1. Calculate a factorial of int n.

2. Binary Search: Implement a function to perform a binary search on a sorted array of 
integers to find the index of a given integer. Comment on the efficiency of this search,
 and compare it with other search methods.

3.Permutations of a string: Implement a routine that prints 
all possible orderings of the characters in a string. 
In other words, print all permutations that use all the characters from the original string. 
For example, given the string “hat”, your function should print the strings “tha”, “aht”, “tah”, 
“ath”, “hta”, and “hat”. Treat each character 
in the input string as a distinct character, even if it is repeated. 
Given the string “aaa”, your routine should print “aaa” six times.
 You may print the permutations in any order you choose.  

4. Combinations of a String: Implement a function that prints all possible combinations of the characters in a string.
These combinations range in length from one to the length of the string. 
Two combinations that differ only in ordering of their characters are the same combination.
In other words, “12” and “31” are different combinations from the input string “123”, but “21” is the same as “12”.

5. Telephone Words: People in the United States often give others their telephone num- ber 
as a word representing the seven-digit number after the area code. 
For example, if my telephone number were 866-2665, I could tell people my number is “TOOCOOL,” 
instead of the hard-to-remember seven-digit number. Note that many other possibilities
 (most of which are nonsensical) can represent 866- 2665. 
You can see how letters correspond to numbers on a telephone keypad in Figure 7-2.
Write a function that takes a seven-digit telephone number and prints out all of the possible “words” 
or combinations of letters that can represent the given num- ber. 
Because the 0 and 1 keys have no letters on them, you should change only the digits 2–9 to letters. 
You’ll be passed an array of seven integers, with each ele- ment being one digit in the number. 
You may assume that only valid phone num- bers will be passed to your function. You can use the helper function
char getCharKey( int telephoneKey, int place )
which takes a telephone key (0–9) and a place of either 1, 2, 3 
and returns the character corresponding to the letter in that position on the specified key. 
For example, GetCharKey(3,2) will return ‘E’ because the telephone key 3 has the letters “DEF” on it and ‘E’
 is the second letter.
