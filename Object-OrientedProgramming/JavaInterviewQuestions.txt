https://www.javacodegeeks.com/2014/04/java-interview-questions-and-answers.html
http://www.javatpoint.com/corejava-interview-questions
This article will be written in the tone of I will speak to an interviewer. 
1. Why java is platform independent? 
   Suppose you want to talk to people in the world but you speak only 1 language, it's simple, you just need to hire an interpretor.
   And that is JVM, the java virtual machine. It translates the code into the bytecode the hardware platform can understand. Of course,
   you need first install the JRE java runtime environment on that machine. 
2. What's the difference between comparator and comparable interfaces?
   Comparable is that object can be used to compare with another object. Comparator is the object used to compare 2 objects. 
3. What's the difference between interface and an abstract class?
   a. All methods in interface are abstract. But abstract class may have a not abstract method.
   b. A class can implements a few interfaces but can only extends 1 abstract class
   c. When implements a interface, you have to override all the interface's methods. You only need to implement the
      abstract methods in an abstract class, unless your class is also abstract.
   d. Variables in interface are final. (int a = 1, must give val) But abstract class just normal you can be or not be final.
      (subclass inherites the interface's a = 1)
   e. All methods in an abstract class are public. But abstract class not necessary
   f. Interface can't have static method, but abstract class can.
   g. Interface can't have a constructor, but abstract class has one thought it can't be instantiated.
   h. Interface can't have instance variable, but abstract class can.
4. 3 ways to initialize a thread
   a. A class implements Runnable interface
   b. A class extends Thread class
   c. An application use Executor framework to create a thread pool
5. 7 states of a thread
   a. Runnable
   b. Running
   c. Waiting
   d. Sleeping
   e. Blocked on I/O
   f. Blocked on Synchronization
   g. Dead
6. What is a Iterator?
   Iterator is an interface that has methods for a collection to iterate all elements. Each java collection has a iterator
   method to return a iterator instance. Iterator can remove an element from collection when iterating. 
   
7. What is fail safe? What is fail fast?
   Java collection has 2 kinds of iterators, one is fail fast and one is fail safe. If it is in the concurrent library,
   it is fail safe, then it's safe when iterating, you can modify the collection. 

8. Two types of Exception?
   Checked and unchecked, unchecked ones don't need to be declared by the method to throws.
   
9. If i don't provide an argument to the main method in the console, would the String[] args empty or null? 
   It would be empty. Not null
10. Writing static pulic void is ok as public static void
11. Local variables are not initialized to any default values, instance variables will be defautly set as null.
12. Constructor can't be final and is not inherited. 
13. You can use static block instead of main method
14. Super is the reference for the direct parent class object. 
15. You can't use this() and super() at the same time both in a constructor, because they both need to be first line.
16. With method overloading, you can't just change the return type because the compiler will be confused.
17. You can have many main methods by method overloading. 
18. You cannot overide a static method because it belongs to a class not an object.
19. Can you use final and abstract both with a method?
    No. Because abstract method must need to be overriden. But after using final, method can't be overiden
20. Can you use static and abstract keywords together?
    No. That will be a bad logic. 
21. Can you use static for an interface?
    No. Because interface is abstract, you can't have abstract and static together. 
22. What is a marker interface?
    A marker interface has nothing inside, such as Serializable, Clonable, just used as a marker. 
