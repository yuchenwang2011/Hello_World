I will finish this website first. http://www.hiredintech.com/system-design

Don't panic, here are some Example Questions :
  1. Design a URL shortening service like bit.ly. https://www.bittiger.io/blog/post/JJcLtcFc8MWzSmbdW 
  2. How would you implement the Google search?
  3. Design a client-server application which allows people to play chess with one another.
  4. How would you store the relations in a social network like Facebook and implement a feature where one user receives notifications 
     when their friends like the same things as they do?

  vertical scaling : make a single server better CPU, RAM, Disk
  horizontal scaling : instead of making a super expensive and good server, we can use several cheaper and old server instead
  load balancer: a blackbox module connecting clients and our backend servers, to distribute those client requests through the servers
  Database partioning: for example, users' name  A-M save into first 3 mysql servers, N-Z user names save into another 3 mysql servers
                       that gives you redundancy.

The SNAKE law to solve those design problems: http://ying.ninja/?p=919 
1. Scenario: case / interface
2. Necessary: constraints/hyposessis
//first 2 are input, 3/4 are output
3. Algorithm/Application
4. Kilobyte
5. Evolve

Fundamental questions in a system design question:
1. Please design the system
2. Please evaluate query per second (QPS)
3. Please scale your system

How to design a Netflix?
