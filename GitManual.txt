https://git-scm.com/book/en/v2 <<Pro Git Book>> very useful
1. To add a folder to Github, you need first create a folder then create a file in it. 
   Github seems can’t upload a folder directly. It works with files. So you can first create file readMe.txt,
   then git add readMe.txt, then git commit -m “to add a file”. Then git push -u origin master to final commit it. 

2. git config --global user.email "yuchen.wang2011@gmail.com"
   you can use the same command but without the email in the quote “” to check if it’s set up properly.
   To show the name or email address, you can use 
   git config user.name
   git config user.email
   git config --global user.name "John Doe"
   git config --global user.email johndoe@example.com

3. To check the status of a file, it’s:
    git status xxx.txt

4. Here is how to add a new repository to Git, first "git init newFolder" which I think it's to mkdir a new direcotory/repository. 
   Second, you make a file, such as readme there under that repo. 
   Third, you git add the file, git commit the file, same as regular commit.
   At the end, you go to the website to create a new repo, give a name, click the button to create a new repo. 
   (Here is scary, the website makes me thought I will have made a repo by clicking the create button)
   After click the create a new repo final certification button, you will be given a link for this repo. 
   Then you do "git remote add origin xxxxxx(the link)", then "git remove -v" to validate it. 
   Finally, "git push origin master" to commit the repo.
   https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
   
5. How to update your repository in local machine
   git pull
   
6. How to add a big project to github
   First "git add ." to add all the files under this folder
   Second git commit -m "xxx", 
   Third git push -u origin master

7. To check what has been configured on your git glocal env, you can do blow to list all the configs
   git config -l   // or git config --list

8. You want to overwrite the current changed files because they are garbage, you can
   git reset --hard
   Then
   git pull

9. To start working on a branch because you were working on another branch, and check if it is up-to-date, you can do
   git checkout

10. To clone the project, go to a folder to use command
    git clone xxxlink
    If this is a branch called abc, you can 
    git clone -b abc xxxlink
    
11. To go back to a previous commit, you can 
    git reset --hard adbasdcaewg

12. To git pull and ignoring local changes, you can
    git reset --hard
    git pull

13. Git has 3 main stages: commited, modified, staged.
    The basic Git workflow goes something like this:
    1. You modify files in your working tree.
    2. You stage the files, adding snapshots of them to your staging area.
    3. You do a commit, which takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.

14. To find manual
    git help <verb>, for example: 
    git help config. 

15. You can put a .gitignore file in the repo root level you are working on
    ps, when you use git status to check, you can edit the .gitignore file by adding ".gitignore" to ignore itself.

16. To rename a file from a.txt to b.txt, you can do
    git mv a.txt b.txt
    
17. To view the history of this repo, you can do
    git log
    But it's giving too much information, instead, you can do
    git log -p -2 , where -p means to show the difference introduced in each commit, -2 means the latest 2 changes
    git log -3 --stat
    git log --pretty=oneline , make a lot of code change easier to read
    git log --since=2.weeks
    git log --committer

18. To discard all the change you have made to a file, you can first git status, it tells you how to do that, by 
    This is a dangerous command will clear your change!!
    git checkout -- filename  (note a space between -- and filename.)
