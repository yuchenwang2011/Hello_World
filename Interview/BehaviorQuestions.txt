==================公司问题=============================
1. Their product
2. Their future (why they are optimizing)
3. How they can beat their competitors
4. The future of the industry
5. Why do you want to come this company
      Everyone knows xxxx is a great company, it's one of the best companies in the world. If I can get an offer, I can work on a
   something used by millions of people every second around the world. I can learn the lastest techonology. I can work together with 
   most talented people in this world. 
6. Why do you want to work on this role


Do you have quesions to ask me?
   1. For general collegue: can you describe your daily routine?
   2. For hiring manager: what I can learn from this role?
   3. For director: a. what's the expectation for this role? (also ok to ask hiring manager)
                    b. which one do you prefer, quality or delivery (also ok to ask hiring manager)
   4. What do you like most about this company/team?
   5. How do you define success for this position? What metrics are you using to measure accomplishments?
   6. How does this product fit into the bigger picture?
   7. In your opinion,how would a software engineer grow on this team?
   8. What are the biggest opportunities/challenges for the team this year?
   9. What are some ways of managers here to help engineers grow/get their work done?

use "STAR":
S：situation
T: task in your agile team
A: your action
R: your result;

==================经历问题==============================

1. ==Introduce yourself==
   My name is Yuchen, which you already know. I got my masters degree in 2013. After that I have been working as a software
   engineer. I worked for Bxx for less a year, 3 years for Nxxx, 1 year for Pxxx then now I'm working for Lxxx, which is almost 
   2 years so far. So I have worked on different sizes of companies, worked with different kinds of software.

2. ==Introduce your work at Bxxx,the technology you use==
   When I was there, my team was responsible for providing software for bb factories. You know at that time, bb's market was still not
   as bad as now. Their factory needs to manufacture thousands of products every day. The factory needs a lot of software 
   to do manufactoring and assembling for their phones. So we wrote software and maintain existing software for them. 
   For me, I had 2 main roles, first one was responsible for a few older products, to maintain the existing software. When our customer 
   the factory ask for a requirement, for example, they need change a specific configuration, I would update the code for them.
   Of course I need to guarantee nothing would be broken by my code change.
   My second role was to write some software at my spare cycle. Looking for what kind of thing that everyone on our team can benefit
   from. Duding then I wrote a windows background service running on a server to do the log file cleaning. 
   
   =SubQuestion: Can you describe the software? =
   
   There are tons of log generated everyday for a big department. Before that the manager needs to manually delete those files.
   So I wrote a clean up service running on the server that will start itself automatically to do that cleaning. The user can have
   options to choose which folder they want to clean, how old the files needs to be deleted, the log file destination. 
   The file structure was super complicated, a log of folders, folders nested with folders, different kinds of files in each level.
   It has a lot of things to consider when developing, for example, 
   Some files are hidden, some files needs certain privilege to delete. 
   Logs created 3 months ago should be deleted but if any single file in that nested folder was ever viewed by someone, 
   files in that folder should be protected. someone is currently reading a file, old folder has new files, 
   new folder has old files, what if the service can't finish its job in 24 hours and then a new service is restarted. 

3. ==Introduce your work at Nxxx==
   First I think I need to introduce my department first. We are the most money making department in Nxxxx. We do their most famous
   software router. It's the very big ones, the router used by ATT, verizon, Rogers that kind of router, big like a wall. 
   We build the software running on it. 
   I was working on the switch fabric related area. The switch fabric is a virtual data path 
   that the data, the packets flowing through. We need to guarantee the data path is always working at a high performance level. 
   No packets should be corrupted or dropped during traffic transmission. So I built the related features to monitor the performance
   under different circumstances. There are many chips in the router, different configurations can make a huge difference. So we need 
   to figure out the best paramters for the chips and FPGAs. 
   (There are small sfps, they are in a bigger MDAs, MDAs are in SFPs, then in a chassis. The sfps are connected by optical fibres, then 
   connected to the data generator.
   so there are Level 1 code written by C/C++ to control all those hardware. And we write the Level 2 commmands to connect all those 
   hardware to form an internal data path. Then on the Level 3 we write other features to monitor the performance, to dump data, 
   I was also responsible for mirroring the data)
   
4. ==Introduce your work at Vicxxx==
   I was a research assistant then. My supervisor had a project about improving current OFDM system which based on 802.11a, of course
   now no one would use that. We need to build the packets according to the 11a specification. Then build kinds of modules 
   multiplexer, demultiplexer, sending and receiving, to simualtion the signal transmitting from end to end. 
   The idea of this project is to use polar 
   coordinate instead the regular cartesian coordinate, which could save a lot of calculation of the system. We also combined soft 
   decoder inside of regular hard decoder to get a 3dm performance improvement. We also try something more that instead of floating 
   point calculation, we used fixed point and explored the minimum digits we can use for different situations but can also guarantee 
   the system's performance.

5. ==Introduce your work at Pxxx,the technology you use==
   I was a QA automation engineer there, or a QA developer. I was responsible to maintain the automation framework, 
   which is running every night, in the morning I will need to debug and figure out what fails the tests. 
   When some new feature introduced or some backend api changes, we need update the corresponding automation script. 
   Also there are a lot of manual testings need to be performed by QAs, so my job is to convert the manual testing 
   into automation code. (I left there after worked for a year because I feel the project was not very challenging.)

6. ==Introduce your work at Lxx,the technology you use==
   Do you know lxx, it's the biggest grocery store in Canada, Canada version of Walmart. For LD, we are responsible for 
   building all the e-commerce platforms, enterprise software required for the big company. We have many teams in the company,
   such as grociery, id, membership, bank, searching, fullfillment, AI, mobile. 
   I work on the Drugmart department, which is the Canada's most famous cosmetics and pharmacy store. It's like the CVS. 
   We are building the online shopping website for it. So customers can browse and shop xxxxx online.
   On backend, we use Java, SpringMVC, Oracle. From this year, we are trying to decouple the frontend and 
   backend. We don't want jsp anymore, we want to use react to replace all frontend. So backend now only provide APIs for frontend and 
   mobile apps. 
   I work most of the time as a backend developer. I'm focused on login, checkout, api 3 areas. 
   
   =Sub Question 1: what do you do for login?=
   For example, all the user related features, such as 
   a. if you are a hacker, you have 4 failed login attempt, you will be warned, if you fail 5 times, your account 
   will be temporarily locked. 
   (Details: In the DB, add 3 new fields for the user, attemptCount, activited, lastLoginTimeStamp, every time it has a
   succssful login, it will reset the value. If there is a failure, we count the failure and put it into session. 
   We will use this value in the authenticationFailureHandler. If 4 times, we warn it. If 5 times, 
   we will deactive it the account. When a user login, we will check the lastLoginTimeStamp, when it cools down, 
   the account will be activated.)
   
   b. Also when you register a new account, there will be strength meter under the password form to indicate how strong
   the password is, if it's too weak, we won't let you register.
   (Details: we used an open source library called zxcvbn, give it a string value, it will give a score how strong it is.
   We integrated on the frontend, when the user types in the pwd, it will dynamically give the score and based on the score, 
   we show a meter under the form. If it's too weak, user won't be able to submit the pwd. Backend also integrated passwordping
   api, it will pass the value to password ping server and check if the password is ever been used frequently. Then backend
   throws exception to frontend to fail register)
   
   c. From last year, we started to adopt Oauth2 login. At first we tried integrated Okta as our Oauth2 server. 
   This year we switched to Oracle IDCS service. 
   (Details: Backend will first gather all the attributes and pass to frontend. when the user clicks login, we send a call to 
   the authentication server. We registered our app on oracle. It asks the user to login enter username and password. 
   After success login, the auth server sends us an authorize code, we use the auth code to generate another call to the auth
   server, the server will send us the jwt token, it has a Id token and an access token. We use the id token for membership
   authorization, and the access token will be used to access API.)
   
   =Sub Question 2: what do you do for checkout?=
   a. We need to find out the best checkout flow by integrating google analytics, each button click on the page is recorded, 
   to figure out the best conversion rate. Then based on the analyse to rebuild frontend pages. We also user Adobe target 
   to do A/B test whenever a new feature is going to be released. 
   
   b. We also integrationed 3 sets of cybersource APIs for our credit card checkout. We use cybersource iframe for new credit card 
   payment, and CS simple order API for existing card payment and cs flex microform api. 
   To prevent fraud, we use CS decision manager and device finger print.
   (iframe Details: frontend will make a call to CS iframe endpoint to get the form confirmation. After that will send backend request 
   to get the required fields. Backend will according to previous checkout steps to generate the corresponsding required fields. 
   then frontend will fill the form with generated data. After click submit, the integrated form will send data to cybersource 
   endpoint, and it will return response with response code. Based on the code, backend will do corresponding order creation.)
   (DM Details: There are so many fraud nowadays. 
   So when CS response with the transaction code, it will have a code, which indicates the order is suspicious....)
   
   c. I also delivered a Colleague Discount Program. Call an api endpoint, decode. 
   Apply price strategy to qualified cart and entries.  
   
   =Sub Question 3: what do you do for api?=
   First we already have an existing web app, but backend and frontend is not decoupled. We use MVC to pass attributes through
   model to frontend JSP pages. This time we are going to launch a new mobile, so we want to 
   use APIs to support them, and btw decouple frontend and backend as well. 
   First of all we need to discuss with mobile developers, PMs and designers to figure out the requirements, what the response will
   be. Then we look at our current code base to figure out how many APIs we currently have, then we need map them together. 
   Then we know how many exisiting apis we have, and how many we need develop. We need to validate the existing ones to make sure
   they are as wanted. Then we split all the tickets to develop the remaining apis. 
   During the process, we need integrate Swagger UI together, which is our final delivery.
   
   =Sub Question 4: Can you draw the system structure of your web app?=
   https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3
   /687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67

=========================简单问题===================================================
1. ==Why do you want to work for Amazon==
  Amazon is the top e-commerce company and has strong focus on customer experience. 
  so many talented people working here and using the latest Technologies to make people's life easier. 
  people always have ownership and always trying their best to make their project perfect. 
  I really like those spirits. I'm also working with LD, BB platform, this is also an position to help customers life easier. 
  
  Second i'm applying for AWS. AWS uses the latest technology and its the best Cloud solution in the world. 
  millions of website there's deployed to it and billions of people are affected by it. 
  every single line of code change can make a big impact to help more customers.
   
2. ==What is your strength?==
   My strengh is that I have a strong sense of ownership.  
   
3. ==What is your weakness==
   My weakness is that I'm kinda giving myself too much pressure. Not pressure from work, it's the pressure from family, 
   from friends, afraid to left hind. Sometimes got bad mood because of that, can't enjoy life. 
  
4. ==What was your biggest challenge?==
   Well, my biggest challenge was that when I first got hired by Axxxxxx, there was a probation period. I was given 2 month time to 
   finish my first project. I was a fresh graduate then and I didn't know anything about the work my team was doing. They wanted to 
   check if I am a fast learner. So I did my best, reading code to learn the APIs and the coding conventions here, checking twikis
   about things I need to consider, asking people the logic behind the code and asking people about the knowledge of our product,
   writing notes, working overtime to write my own code. So I proved my ability to learn fast and I managed to finish the project
   from scrach to release. 
   
Most challenging project
The most challenging project is my current xx project. It is challenging because I need to implement all the new features on my own. It requires me to build machine learning tools for network threat hunting, I haven’t done anything related to threat hunting before. And It also requires me to build RESTful APIs for the tools. I haven’t developed any RESTful API before either. It also requires me to build alerting system and But the time is not unlimited, so I started to devote more time on the project, even my private time. I googled a lot of papers related to threat hunting, like malicious url, dnstuneling, network behavior. When I came up with some ideas, I would discuss with my manager to make sure the plan is feasible. And then I learnt Go as quick as possible so that I can design and implement all the RESTful APIs on time. Finally, all the new features have been implemented on time and we received positive feedbacks from the customer. So through this process, I learnt that it is so important to be curious and keep learning, the more you read and learn, the more problems you can solve. The feeling of ownership is really really important, the product is just like your own child. So “I don’t know how to do it” will never be the excuse.

5. ==What was your biggest achievement?==   
   
6. ==What was your most difficult / proud of project? 1你从这个项目中学到了什么? 2. 有什么是以前不会的？做完之后就会了。==
   The project I'm most proud of is that during my work at Nxxx, I wrote a big code automation that can save a lot of effort.
   Before I took that part of testing, every time we introduce a new module, I need to do a lot of manual configurations and write 
   some code specifically for it. Then I used my spare time to write an interface to accept all kinds of modules, every new module
   introduced, I just need to write some basic information into it. And I subtracted the things in common and tests in common as
   a whole, integrate them together. And I integrated the performance check tests that makes checking performance a standard.
   So after I build the system, I can save a lot of time testing new modules.

7. ==What can you bring to us?==
    My sense of responsibility. I am a person having a very high standard of myself and want to make my release perfect and free of 
    bugs. I will feel a shame to fail release and not working my best. I've been doing software testing for 3 years, I know how
    to quality control and make my code less bugs. 

8. ==Why should we hire u? / why do u think urself a good fit for this position?==
    I have worked in a big company for 3 years. So I know how to teamwork with coworkers, how to interact with deverlopers, 
    testers, product managers things like that. I know how to write code of a certain standard. I know how to provide quality
    control and decrease the chance of bugs.

9. ==How can you improve your coding ability?==
    For example, during my work, when I have spare time, I don't relax. I would read other people's code, assuming if I were them,
    how I would write my code here. And we do code reviews, I can get feedback from other people, this really helps a lot.  
    I would also spend quite a lot of time to read API documents. The more I'm familiar with it, I can write better code. 
    
10. ==How would other people describe you?==
    People describe me a person with sense of responsibilities. They can trust me and rely on me.
    
11. ==Plans about ur career growth path?==
    I want to be a java expert
    
12. 列举你最近6个月看过的技术方面的书。你常看的技术blog，常去的讨论技术的网站?


==================TeamWork==============================

1. Tell me about your teamwork experience
    
2. 你怎么跟teammate合作；遇到有人不合作你怎么办；

3. 有没有过主动承担队友任务的经历，为什么

4. 有没有在一个项目当过领导；

5. 有没有帮助别人的经历 How you help teammate

6. describe a time you are the minority in the room
==================Conflict==============================

1. 有没有做过一些同事已经觉得足够好,但是你觉得还不够好的事. How you insist the highest standard

2. 有没有和领导有过争执.

3. 你想用A方法来实现你负责的这块任务，你老板让你用B方法，但你觉得其实A方法更好，你怎么办? 

4. decision without consulting manager

5. 你的老板如果在出差，你联系不到，你该怎么办?

6. 你和其他小伙伴有冲突或吵架怎么办；


==================Deadline==============================
1. 你有没有遇到过deadline来不及的情况，你怎么解决的？

2. tight ddl and have to make decision without considering alternatives 

3. 你发现你组里一个组员的任务实际上来不及赶上deadline了，你懂他负责的这块，他可能没有你懂，却以为来得及。
    你们的老板不清楚情况，你该怎么做?
    
4. 你遇到一个问题，有方案A和方案B，必须选一个。它们互有利弊。你时间有限，无法花太多时间考虑，你应该怎么做?

5. 一个如果项目中有很多bug，但是deadline快到期了，你会怎么办? 如果这些bug不重要呢？

6. DDL 快到了 没做完 该怎么办

7. 有没有过miss deadline，怎么做的；

8. 问了有没有要很短时间内完成一个project的经历，时间不够是因为哪些原因之类的， 突
   然需求改了，需要做的东西就不够了，加班加点，先完成重点需求
   
9. 有一个紧急情况

==================Make Decision Experience==============================
1. 怎么做重要决定

2. tell me about a time when you have to move fast (make a decision fast)
   Cybersource Decision Manager test environment doesn't work, support people said no issue. But just not working. Need to move fast, because we don't think there's any issue. So just release to
   production.
3. what is the part you don't like a time when you take a calculated risk

4. 自己犯的比较错误的一个decision

5. 有没有对自己的承诺失误过，

6. tell me about a time that you failed

7. 你在现在公司,最大的creative idea是啥；

8. 有没有做过一些你很讨厌做的项目，被迫要做的那种；

9. anything you don't fully understand, but you do it anyway 

10. 问了要马上开始做一个你还没有完全理解的project时会怎么办 PM 举个例子

11. How you clarify requirement

12. 项目信息量比较少 该怎么办 do a task without enough information

13. 有没有走出舒适区的经历

14. 在学习新技术时，你的thought process是怎样的

15. 曾经遇到过的项目中重大改变是什么，你怎么解决的?

18 有没有make什么wrong decision, 是怎么发现怎么解决的。

19. 对xx公司有什么改进意见？

20. Describe a time you encountered an issue and how you fixed it.

21. when you made a mistake and how you correct it?

22. The biggest mistake you made and what did you learn from it? (earn trust, customer obsession)

23. Describe a situation where you exceeded expectations/did more than required

24. describe a time you use a smart way to solve a difficult problem

25. tell me about a time you have Two ways of implementation, you choose which way and why

**********************************Amazon Principles****************************************
==Customer Obsession==
   Leaders start with the customer and work backwards. They work vigorously to earn and keep customer trust. 
   Although leaders pay attention to competitors, they obsess over customers.
   1. 以重视客户为荣，以重视对手为耻
   例子: 1. 不能右键打开PDP，can't right click the product to open new tabs. back customer experience but designers don't agree with it. 
         performed a survey among the company to prove and persuaded designers, marketing, product teams.

   相关问题 
    • Who was your most difficult customer?
	I just introduced it that I work for Shoppers beauty.and there was a time some beauty advisor in the store contact us 
	and said our software is hard to use. It is so slow and we're not able to help customers. 
	I can't skip these complains because beauty adviser they're facing our customers directly  
	and we need to guarantee that we provide the best customer experience.

	so I scheduled a few store visit and visited is a few beauty advisors in our real stores. 
	I tried to figure out what was really slow was it because the iPad or itself or it is because the network 
	or is it because the software running all of that or something else. But they are expersts on makeups 
	but they don't know tech at all, they coudn't even describe what they need and what part is bad. 
	So I stayed a long time with each of them to see how they support their customers. 

	so actually I find out they are two things make the process slow that is one is we have a big CSS file 
	to load on a certain page. But real store usually have a slower Network so which makes they feel 
	that software is slow second the process was slow there was a step I need the beauty advisors to 
	to login for the customer but there will be a lot of extra process because the need to ask their customers to login. 
	Their usernames and password a litter the customers doesn't trust the device. 
	they have to spend a lot of time to log in and log out.

	so I removed the process for a beauty advisor to login anymore. second break the css into 
	smaller pieces and refactor some unused code. After that our beauty advisor thinks it makes their life much easier. 
 
    • Give me an example of a time when you did not meet a client’s expectation. What happened, and how did you attempt to rectify the situation?

	there was a time in my previous company and that time I was a QA. 
	we did a POC that is to customer, which is to archive all items in BOX.
	you know the software box which is similar to Dropbox where people can upload their files. 
	For big Banks or investment Banks they need to track there is like internal confidential item leaking. 
	so they will need to ask as to archive all the items that once been uploaded to box and who did that. 
	so we did a POC on that and then a customer really satisfied with that and they give us 2 months to implemented 
	and we under estimated time. 

	but actually 2 months not possible at all so what team of 4 we work so hard everyday use like 
	14 hours a day to work on it for 2 months and we're still not able to delivery on time. 
	there are still a lot of issues to going on such as Multi threading issues duplicating issues, missing information. 
	if there is a huge file uploaded then we'll crash. So by 2 months we stilll haven't finished it, we asked customer 
	to have another 2 months to finish it. It was lucky the customer was nice and said yes. 
	Finally we finished that in the fourth month. 

	But this this give me a very good lesson, that never under estimate things in the software industry. 
	You will always see different issue. 
	at the very beginning of the POC we should be able to insist the highest quality, a lot of things could have been considered. 
	At that time, especially I was a QA, before doing POC, I should have given a lot of my concerns 
	and also another point of view to developers. People should gather together to estimate.

	also second thing I've learned is always take think about customer  before the two months not 
	when it comes to two months are just say okay we didn't finish it before that 
	we should let the customer know there's a chance that we couldn't finish it, to let customer know the risk beforehand.

    • When you’re working with a large number of customers, it’s tricky to deliver excellent service to them all. How do you go about prioritizing your customers’ needs?
	I think if there are multiple group of customers, each of them is very important. we can't say okay 
	this one has 10,000 users and that one has 1000 user and so the 1000 user are not important, we can't say that.
	so we need to find out the feature that both group of user both need 
	and try to finish that part first that is the highest priority feature.
	personally I don't have any experience to serve multiple customer at the same time 
	but I do have an experience that I support two features that support 2 group of customers.

	there was a time I need to support two features at the same time. one is for the sync cart API 
	which will be needed by the mobile app. the second feature is to create a better mobile browser experience 
	which is not on the app but on mobile browser to create a light PDP productive detail page. 
	Then customer need to load less content on their phone. both I think those are very important 
	and the I can't really take which one is higher priority so I discussed it with the project manager 
	and a product manager which one is higher priority and actually dicussed with project manager and product manager 
	that one is more important so as a result I need to be really focused on first one 
	and try to use my spare time to finish the second one.
	Finally i finished both features. mobile team likes my work and web browsing team likes my work. 
	Both of the features launched on time. 

    • Tell the story of the last time you had to apologize to someone.
	it was a long time ago when I was coops at BlackBerry I was implementing a windows background service.
	the service is to delete all the server logs that has been more than 3 months, that's all the ticket says.
	because there are tons of logs generated every day and sometimes the manager needs to delete them manually
	then I just wrote the software to delete files in the folder. but later someone on the other team 
	send an email to everyone saying they cannot find his very important files anymore
	those files are very important to him so I said I was very sorry I didn't mean to do it. 
	he said it's ok since I was a coop. it was lucky has has backup files but he still needs 2 days to recover those files. 
	Then I asked people on all teams who have access to the drive, updated the service to avoid delete certain type of files.

	From this I've learned a life experience that whenever I got a requirement which doesn't have a lot of description 
	I need to gather as much information as possible whenever I need to touch something
	that could break existing features. I need gather all the stakeholders' opinon to clarify the requirements 
	so the new feature won't break current functionality
	
	answer2：
	there was a time I was implementing cybersource decision manager for our customer support team, 
	which is to help them instead of using the original old system to process suspicious order. 
	now they can do it in the cybersource Center in which they can see user billing address, shipping address, membership ID, 
	visa info, score of the transactions based on preset rules and from there they can accept or decline an order.

	I discussed with the customer support team about all the flows during their work. and implemented apis 
	that will support to simulate the button pressed in their original old system. and it was released 
	to production the tested everything seems okay. but after a week the warehouse team said there are 
	eight hundred orders stuck in a status they're not able to change the system status. 
	I know there's something wrong about my code. 

	I did a lot of check how to find out. there is a button when they click releasing the order. 
	there is an publish event service created and also a separate order will be created. 
	so instead of processing the original order what it does is actually create a duplicate of this order 
	in the back of system, and the original order is cancelled. My code accepted the original order 
	but the original order doesn't have the attached published event. so as a result I added the functionality 
	to my api and I feel really sorry the customer support need to process the orders again that took them a week. 
	and more so they need to manually create them by themselves. I learnt from this mistake so whenever 
	I made a change on some existing functionality I need to have a end to end testing at first. 
	I thought I asked customer support that is enough but actually this should involve Warehouse people 
	as well so whenever there is a big feature we need to get all the stakeholders together and to listen to all their opinions

    • Describe a time you persuade the customer to use a different view to see things
	it happened this recently and I'm working on the rest API suite to support mobile app development 
	so the mobile team is my customer. for each our API it has an access level. 
	It can be anonymous user or some of them must be authenticated user. 
	so the API should have a header of Authentication with access token with it. this is a standard 
	are all rest API development I thought everyone could understand this 
	but our mobile developers think this is so tedious what they want is for all rest API calls 
	they wanted all have authentication header because otherwise they need to spend time 
	to figure out which one needs and which one doesn't.

	I told them this is an industry-standard also this API suite not only will be used by them. 
	it will also be used by our frontend developers. they still want to use it in that way. 
	Then I said this is good for yourself as well. it's good for you your coding skills to follow the best standard. 
	Now you just need spend a little bit extra time to look at the Swagger documentation 
	you can easily figure out the difference between then. Also your code will be more maintainable. 
	if someone left the team, the next person taking care of the code will be very confused. And they agreed with me.

==Ownership==
   Leaders are owners. They think long term and don’t sacrifice long-term value for short-term results. 
   They act on behalf of the entire company, beyond just their own team. They never say “that’s not my job". 
   2. 以担当为荣，以逃避为耻
       
   相关问题：
   • Tell me about a time when you had to leave a task unfinished.
	Usually I tend to finish all of my tasks, but there are always some tasks higher priority than others. 
	there was a time I was fixing our bamboo environment. it was the pipeline and it will run unit tests 
	and that was broken for a long time so fixing it would help our team prevent bugs.

	Then I got another task that we decided to switch to Cloud environment before it was on DC. 
	Switching to Cloud environment is also very important because in the future we can scale our environment much better. 
	I think this is very important and in the future once we deployed to Cloud environments 
	which can help more customers especially during the Black Friday season. 
	so I just stopped fixing the broken unit tests and then start work on migrating to cloud. 

	In the end, i successfully helped migrating our environment from DC to cloud. 
	Then I went back to fix our broken unit tests. The unit tests can be run on cloud pipeline as well. 


   • Tell me about a time when you had to work on a project with unclear responsibilities.
	so there was a time we're trying to create a new page for customers who use mobile browser to search a product. 
	when they click on the  lighter version of the product detail page. it was two of us to work on it. 
	I should be responsible for the backhand and the other person to work on the front end so on my side 
	I did the feature flag, the page integration, api end point, generating analytics data.

	when I thought my part is done but the frontend person said he doesn't know how to deal with the backhand data on frontend. 
	That should be my responsibility. then I said everything shown to the customers should be frontend. 
	backend stops at controller end point level but never mind this time since you don't know how to do it, 
	and we have a deadline I can do this for you. but you need to learn how I'm doing it and next time you can do it
	yourself so I took that part of responsibility as well. 

	then I thought my part is done but he said the AB test he doesn't know how to do it 
	and I said this is everything happens in a Javascript file it is pure frontend. 
	but he resisted to do it. there's a deadline so this time I will cover for you 
	but it will not happen next time you still need to learn from it. So I took that part of responsibility. 
	at the end we finished everything on time 

	I did learn a lot from this time that whenever there is a teamwork we need to 
	at the very beginning to define the responsibilities clearly. who is responsible for something 
	and who responsible for something else. so at the end this won't happen again. 
	somebody thinks you should do it and then the other people think you should do it. 
	that will delay the delivery also it would be very bad teamwork experience 
   • Tell me a time you sacrifice short-term benefits for long-term benefits
	so it happens during the time I was working on our rest APIs. I find out the current code the current end points 
	just randomly throw some exceptions. Different people throw it in different ways. 
	different error code, different messages, different types, not standardized at all.
	
	I think this is a very bad experience for our client. our client is the mobile developers 
	so they need to handle different kinds of error code error type error messages and not consistent. 
	for short-term just leave it there and we have other things to do just to quickly move on. 
	but for long-term this is not good. so we need to sacrifice some short-term benefits 
	spend some time to standardize all their response. 
	
	so I spent a few days to create a web service error converter and the all the detailed exceptions 
	each has a corresponding converter which extends the webservice error converter. 
	This implementation used template method design pattern. So after that the error responses
	are consistent and saved our customers a lot of effort. 
 
==Invent and Simplify==
   Leaders expect and require innovation and invention from their teams and always find ways to simplify. 
   They are externally aware, look for new ideas from everywhere, and are not limited by “not invented here". 
   As we do new things, we accept that we may be misunderstood for long periods of time.
   3. 以创新为荣，以复杂为耻
 
   相关问题
   • Tell me about a time when you gave a simple solution to a complex problem.
	there was a time at my previous company we implemented the software that uses office 365 Outlook
	restful apis to help customer archiving their Office 365 outlook emails. 
	because our customers are all very big companies Banks investment Banks, we need to archiving thousands of emails 
	per day but we only have limited budget and resource to do that. Our Office 365 account doesn't support that. 
	we need to pay a lot to Microsoft to get a hirer level Office 365 account for more spaces for testing and clean. 
	Then I came up the idea that we don't need to spend that money instead we can create a VM machine, 
	create an Office 365 Outlook local environment, and save 40000 emails on local. create a screenshot of the VM. 
	on our software we can write a simple converter to use powershell commands instead of restful apis. 
	so then we don't need to spend any money just to keep the VM screenshot rolling back everyday for the testing.
   • Tell me about a time when you invented something.
	there was a time I realized new hires onboarding our teams, they have to spend a long time to set up their environment. 
	I didn't realize that the very beginning because myself it only took me half day but not all the people are good at it. 
	some people take 3 days.
	it requires installing Java, MySQL NodeJS grunt, clone repo, Install plugins using homebrew, 
	creating SSH key, configuring folders, install apache ant then build the local environment. 
	replacing some jars. So I spend a few days and created a bash script to automate all those tedious steps. 
	It saved everyone so much time not only for new hires, also people need sometimes setup their local again. everyone likes it. 

==Are Right, A Lot==
   Leaders are right a lot. They have strong judgment and good instincts. They seek diverse perspectives and work 
   to disconfirm their beliefs.
   4. 以多元角度为荣，以固守己见为耻
   相关问题:
   • Tell me about a time when you were wrong.
	there was a time about our search API, when you do a search, say lips, 
	the backend returns a list of filters, skin type, brand, etc, to frontend. the returned value 
	for each filter will be lips:skintype:dry, lips:brand:dior

	Our customer the mobile Developers had some trouble using it. on web when you click a filter, 
	it refresh the page right away, but on mobile they want to click multiple filters together then search. 
	So they need to input lips:skintype:dry:brand:dior. They need to do some string processing, 
	but we had agreed that no logic would be needed for mobile team, everything should be from our backend. 

	another developer and I both have a solution. I think to make the solution simple and stupid, 
	as easier as possible for our customers. so I think okay I can create a preprocessor method 
	at the beginning of the API endpoint. so they don't need to worry, I will process it for them. 
	the other developer thinks in another way also simple, he said we can just return the broken down values. 
	clients can combined together themself as they want. we can't persuade each other so we've implemented both 
	and let customer choose which one do you like. But they chose the other one. 

	so the lesson I learned from this, is that if something you feel very simple, 
	but it doesn't necessary other people feel the same way. they may feel differently, 
	so you think this thing is intuitive, but you're actually wrong. you need to listen 
	to more people to know how they feel and understand from another point of view
   • Tell me about a time when you had to work with incomplete data or information.
	so there was a time I got a ticket from marketing team and the title was "help Google search" 
	and there's nothing details in the ticket description. I don't know any information at all I'm not able to do any work. 
	so I connected with the marketing team who created the ticket and they said the issue was from our analytics data. 
	we find out most of the users are from typing url directly but not from Google Search. so the task is to improve that. 
	and it's our developers responsibilities to figure out how to do that they are expert as marketing 
	and advertising but they don't out any technology. 

	I have never done anything similar before. so I did a lot of search and ask around different people 
	how we can do that and I figure out it is called SEO. after I find this word I also did a lot of Google research 
	on how to do a better SEO to help Google to find our web pages. then I create an Excel table 
	the SEO title SEO description for all the web pages then discuss with the marketing team 
	if they're satisfied with that. then I created meta tags for each of the pages and used a tool 
	called SEO quack to verify our SEO score is much much higher than before. 
	and the marketing team are very satisfied with that and our customers from the data shown 
	they can find our website Google search easier.
     
==Learn and Be Curious==
   Leaders are never done learning and always seek to improve themselves. They are curious about new possibilities and act to explore 
them.
   5. 以好学好奇为荣，以不思进取为耻
   相关问题:
   • Tell me about a time when you influenced a change by only asking questions.
	there was a time i was working together with another developer for a feature checking if a customer is a colleague, 
	if so, it can have a colleague discount.
	he is responsible for implementing checking the eligibility of that customer by requesting from a remote server. 
	I looked at the code, i just keep asking questions.
	what if the response is null because the server is down? Then he said oh i can add a null check. 
	Then I ask what if the server is not down but in a weird state.
	Then he said then i can add a status code check. Then i ask what if the customer currently is eligible the items, 
	saved items in the cart, but later left the company. 
	Then he said then i will add an eligible check each time a user checkout. 
	Then i said, you are adding unnecessary calls to the not colleague users. Then he said then i can
	add an attribute in the cart object to indicate this is a CDP order, if cart has this attribute, 
	i will re-check each time checkout.
   • Tell me about a time when you solved a problem through just superior knowledge or observation.
	there was a time we pushed a release and we received a lot of http failures, and the status code is 413. 
	The release has multiple changes, so nobody knows which one could
	cause it. and why on test environment, there is no issue, but it happens on production. 
	and I said 413 means the reuqest is too big. just check the feature which touched
	http. then we find one feature added an access token to the cookie. Then i said it must be it 
	because our original http header size is at the limit and after adding this one,
	it exceeds the limit. Other people not sure how to deal with this situation. 
	Then I said, we can increase apache web server allowed request size. After change still not working, 
	i said apache mod_jk connecting tomcat in it. you need change that and also change the tomcat packet size. 
	Then this issue was solved without rolling back the release.

==Hire and Develop The Best==
   Leaders raise the performance bar with every hire and promotion. They recognize exceptional talent, 
   and willingly move them throughout the organization. Leaders develop leaders and take seriously their role in coaching others.  
   We work on behalf of our people to invent mechanisms for development like Career Choice.
   6. 以提高表现为荣，以埋没天才为耻
  
   相关问题:
   • Tell me about a time when you mentored someone.
	there was a time we had a coop student and I was her mentor. she is smart and her gpa was all great. 
	she can write code but after a week I feel she is struggle. 
	I try to ask what she feel confused and she can't really tell. I feel she may not have a big picture 
	about how a web app works. So I explained to her what is a MVC model.
	How a client interacts with frontend and how backend reacts with frontend. And also i introduced her 
	the backend different layers. Then she feel much better about what she's doing. Then every time she gets a ticket, 
	she knows which part of the system she is working on. She was really successful when she was with us.

==Insist on the Highest Standards==
   Leaders have relentlessly high standards - many people may think these standards are unreasonably high. 
   Leaders are continually raising the bar and driving their teams to deliver high quality products, services and processes. 
   Leaders ensure that defects do not get sent down the line and that problems are fixed so they stay fixed.
   7. 以严格标准为荣，以产品缺陷为耻
   相关问题:
   • Tell me about a time when you couldn’t meet your own expectations on a project.
	there was a time when i was working on integrating memcache to our system. it will be used by our nodes. 
	we have 20 nodes, if one is down. the session is saved in memcache.
	Users don't need to login again. but at that time, i have no idea about how our system deployed 
	and what was memchache. not even very clear about the codebase. There was another team that finished it 
	and their codebase is smiliar to ours. 
	I got some help from them and get work done. But I didn't meet my own expectation. I feel everything I touched, 
	i should be 100% sure about what I'm doing. So after that ticket, i spent a lot of time reading 
	about how a web service is scaled and related technologies. Then i finally understand 
	why i implement that feature and why i did it in that way. 
   • Tell me about a time when a team member didn’t meet your expectations on a project.
	there was a time a team mate and I was working together on the brand related api. 
	I was working on the get all brands api, he was working on the getBrandById api. and his code
	really hurts my eyes. To guarantee our project quality, i can't let his cdoe sneak pass, 
	so i spent a lot of time doing code review. I eyebowed every line of chnage and also give some code examples 
	how I would do it. Also the following code commits he made to fix the review, 
	I also gave reviews on those fixes. At last our code meets the expectation, 
	then we take the MR to other tema members to review and people like it. 
==Think Big==
   Thinking small is a self-fulfilling prophecy. Leaders create and communicate a bold direction that inspires results. 
   They think differently and look around corners for ways to serve customers.
   8. 以大格局为荣，以小眼界为耻

   相关问题:
   • Tell me about your proudest professional achievement.
	there was a time I implemented the login feature for our website using Oauth/OpenId protocol.
	We use Oracle server for Authentication. I first send a request to authentication server to get auth code, 
	the auth server will call our callback url. I created the filter to get the access code from the oracle request. 
	then use this auth code to do a token exchange with the authentication server for an id token and access token.
	after that I use this ID token to login pcid to get the user information, if they never used our website, 
	i do a sync for them on the backend. the access token to log in PC Optimum our membership program. 
	the access token from PC Optimum save in the database for future use. and the access token from Oracle, 
	I save it in the cookie so the requested from the browser well be authenticated for logged in user to access resources.
	I'm very proud of this project because this is the login flow has interactions with so many features we have in our system. 
	After finishing this project, i have a much deeper udnerstanding of our application. 
	Also my project is almost the first thing a customer will do when browsing our website. 
	When i see customers using my feature, I feel so proud of it. 
   • Tell me about a time when you went way beyond the scope of the project and delivered.
	it is still the login feature I was working beside only login I also implemented other features 
	that the take it has never talked about that has so if a user want to log out if user want 
	to change password and an email is sent to the customer that has link for you to click 
	so what about this time you're not locked out or at this time you are locked out already 
	so that's two scenarios to consider and also there is a user one I want to change their email 
	and also a email is sent to a link to the link and you click that link what happens 
	if you were logged in now or you already logged out also there are scenarios

	and there are also other scenarios to think about what if a user session times out 
	and but the token hasn't. or the user has remember me service if a user want 
	to access our website using Postman. what about a new registered user, 
	do we let them login again or give them exemption. so a lot of extra things 
	to think about outside fo the ticket requirement, so I finish this thing Way Beyond expected requirements.
   • Tell me about a time you have Two ways of implementation, you choose which way and why
	there was a time I was implementing the user Authentication. 
	the functionality is to first using Oracle certificate to validate the access token. 
	second loaded the user information from backend, if doesn't have the user, 
	synchronize it using the access token pcid information. then set the user for current session, 
	at last assign the user a role to access resources.
	I could do it in two ways one is do it in the in the auth processing filter, 
	the other one is to do it in a separate auth provider, which creates a new class. 

	first one I think it is easier because when people read that filter, they will understand it easily, 
	okay this filter does this this this. but the other one at first you need 
	to create a new class also you need some XML configurations. it's little bit tedious 
	but in the long run, it's more maintainable. for example tomorrow you have another way 
	to authenticate the user you can just a switch the provider and change another one. 
	so in the long run it will be better so I chose that one.
==Bias for Action==
   Speed matters in business. Many decisions and actions are reversible and do not need extensive study. 
   We value calculated risk taking. 
   9. 以敢干为荣，以慢拍为耻
   相关问题：
   • Describe a time when you saw some problem and took the initiative to correct it rather than waiting for someone else to do it.
	We use a tool called App Dynamics to monitor the webserices and errors
	there was a time I was browsing app Dynamics and I suddenly noticed the review service error 
	rate was not low. then I wondering how come the review service has error and It's 
	All About Time Out exception so then I just to take actions right away 
	because i think this will affect customer experience. 

	I did a lot of Google research and figured out that the version we are using SDK 2 points something 
	and the latest version of ready 4 point something. so without given a task, 
	I just created a ticket myself and updated the SDK version from 2 to 4. 
	then I did a lot of testing to make sure the review of service working fine 
	and after deployed to production, from then the time out exception were all gone. 
   • Tell me about a time when you took a calculated risk.
	there was a time I was implementing 2 API endpoints which is to accept requests 
	from a third party cybersource. when clicked a button in their test center, 
	it should send a request to the call back url. I find the endpoint would never be hit that is so weird. 
	and I keep checking code, I'm pretty sure the code has no issue. 
	so after a few days to bugging and I also contacted the cybersource support team, 
	they said they're lower environment has no issue at all. I'm pretty sure the code is correct, 
	so even deploy to production the worst case will be the endpoint doesn't work. 
	it won't affect current functionalities. so I can take this risk to deployed to production 
	even test environment doens't work. After deploy, I find it's working on production, 
	which means the cybersource test centre doesn't work at all, what their support team said was wrong! 
	that's service doesn't work.  so that I reported this to them to get it fixed 
	and my code already successfully deployed to production and is working fine. 
	Sometimes you need take some risk if you are pretty sure about something.
   • Tell me about a time you needed to get information from someone who wasn’t very responsive. What did you do?
	there was a time I was developing APGEE and we need a static URL to connect to. 
	this will be a special environment with production data, special indexing. 
	this will need devops to help us to create it. I contacted the Project Manager on Devops team 
	and it was added to their following spring. but then the person supposed to work on it never response me, 
	no matter I call him, I direct message him, I at him in public slack Channel, 
	he just doesn't reply me and ignore my messages. 
	so I have to escalate this issue to my director about it because it's a real blocker for us. 
	I ask my director to contact their director to prioritize this one and then he starts to reply me, 
	then we get things done. After working a few years, I did see people like this, 
	they won't work on anything, won't help anyone, unless their manager asks them to do it. 
	They only work for credit, not for customer. The experience I can get from this, 
	is that to avoid this sisutation, we need to escalate the issue 
	and let higher level people to get involved and escalate it. 

==Frugality==
   Accomplish more with less. Constraints breed resourcefulness, self-sufficiency and invention. 
   There are no extra points for growing headcount, budget size or fixed expense.
   10. 以省钱为荣，以花钱为耻
   相关问题:
   • Tell me about a time when you had to work with limited time or resources.
	this summer we decided to Launch mobile app for Shoppers Drug Mart. 
	the decision is from high high high level management and when it comes to our director, 
	we only have 4 weeks to work on the API. The first version should be released in one month. 
	I will be the only available person to work on it.
	the time is very limited just one month and so I discussed with the mobile team about what they need. 
	they need about 60 apis. one person can finish 2 APIs a week.  I'm the only person on that 
	so I have to think another way to figure that out. I go through all our current codebase 
	and try to figure out there must be some code I can reuse. And I did find a lot of code i can reuse. 
	I can add the controller layer mapping for them. other than that I only need to write 15ish APIs. 
	I just really got focused. My director found another person available at the 3rd week. 
	And we worked super crazy and got that done and delivered on time.

==Earn Trust==
   Leaders listen attentively, speak candidly, and treat others respectfully. They are vocally self-critical, 
   even when doing so is awkward or embarrassing.  Leaders do not believe their or their team’s body odor smells of perfume.  
   They benchmark themselves and their teams against the best.
   11. 以尊重员工为荣，以端着架子为耻, 学会自我批评
   相关问题:

==Dive Deep==
   Leaders operate at all levels, stay connected to the details, audit frequently, and are skeptical when metrics and anecdote differ.
   No task is beneath them.
   12. 以深究细节为荣，以忽视问题为耻
   例子: 有一次contact us page remove footer. affect checkout. 从那以后，再小的PR也要仔细看
   相关问题:
   • Give me two examples of when you did more than what was required in any job experience.
     First:
	it is still the login feature I was working beside only login I also implemented other features 
	that the take it has never talked about that has so if a user want to log out if user want 
	to change password and an email is sent to the customer that has link for you to click 
	so what about this time you're not locked out or at this time you are locked out already 
	so that's two scenarios to consider and also there is a user one I want to change their email 
	and also a email is sent to a link to the link and you click that link what happens 
	if you were logged in now or you already logged out also there are scenarios

	and there are also other scenarios to think about what if a user session times out 
	and but the token hasn't. or the user has remember me service if a user want 
	to access our website using Postman. what about a new registered user, 
	do we let them login again or give them exemption. so a lot of extra things 
	to think about outside fo the ticket requirement, so I finish this thing Way Beyond expected requirements.
     Second: 
	there was a time our developers set up our local developer environment. 
	there's some errors in the initial data and sometimes it just to throw null pointer exception 
	because the data was not set correctly. and my task at that time was to fix the init data. 
	When i was doing it, I realize that when we onboard to setup our local environment, 
	we need to import a lot of files. So tedious, there are store data files, 
	product data files, category information, promotion information, samples, gift and media files. 
	that's very tedious 
	to do it manually and must be imported in orders. so during fixing the initial data error, 
	I created a service that it will automatically load it for environment setup. 
	so it saves everyone a lot of on boarding time, it is not required by the ticket 
	but I just do it because that will help us
   • Tell me about something that you learnt recently in your role.

==Have Backbone; Disagree and Commit==
   Leaders are obligated to respectfully challenge decisions when they disagree, even when doing so is uncomfortable or exhausting.
   Leaders have conviction and are tenacious. They do not compromise for the sake of social cohesion. Once a decision is determined, 
   they commit wholly.
   13. 以反对为荣;一旦妥协，就得照着做
   相关问题:
   • Tell me about a time when you did not accept the status quo.
	there was a time I need to work on creating a new product detail page. 
	we had a product detail page before but this one is for mobile user only who use mobile browser. 
	this page will load faster. there is one thing to implement the analytics data. 
	I think the new page should be in a new category, new name, new section. 
	so people can easily tell customers buying products from this new page or from the old page. 
	but the other person working on Analytics, she thinks they're both product detail page, 
	their data should be put together. I totally disagree with that. 
	in that way we're not able to tell apart from these two pages. 
	but she is responsible for analytics. so even I disagree and she doesn't accept my suggestion, 
	I have to accepted her decision then implemented as her solution
   • Tell me about an unpopular decision of yours.
	this one happens recently, the director from Project team wants us to make our getCart API public, 
	which means even from API call I can get your cart information. I can see you what you have put in your carts. 
	he thinks whatever put in the cart is not important, this change will make 
	the customer more convenient don't need login. I totally don't agree with that. 
	because I think the customer may have some thing they want to be private, don't want other people to know it. 
	also the get cart api also responses the membership ID related information, 
	that is also personal information should be private. so we both disagree with each other 
	and he is the director so people tend to agree with his opinion. but I just insist 
	I can't let the customer lose this privacy. so we created another ticket to do a analysis 
	on whether this it is doable rather than do it right away.

   • If your direct manager was instructing you to do something you disagreed with, how would you handle it?
	there was a time I was working on implementing the colleague discount program. 
	and I was thinking to add a limit for a customer can purchase per year. 
	but my manager doesn't agree with that. don't bother we don't have a limit. don't make it too complicated. 
	I think what is a colleague with 30% off buy things and resell it to someone else, 
	in the future we might get a requirement to limit that. my manager said that doesn't matter, 
	we have a high margin, it increases our sales anyway. so since I can't persuade him 
	I just do as what he said no per year limit her colleague.
  
==Deliver Results==
   Leaders focus on the key inputs for their business and deliver them with the right quality and in a timely fashion. 
   Despite setbacks, they rise to the occasion and never settle.
   14. 以挺身而出为荣，以发布失败为耻
   相关问题:
   • By providing an example, tell me when you have had to handle a variety of assignments. Describe the results.
        Usually each sprint, I would be assigned a few tasks to do. I usually would priority them myself first according
	to whether it would affect customer experience, and then dependencies. 
	there was a time I was fixing our bamboo environment. it was the pipeline and it will run unit tests 
	and that was broken for a long time so fixing it would help our team prevent bugs.

	Then I got another task that we decided to switch to Cloud environment before it was on DC. 
	Switching to Cloud environment is also very important because in the future we can scale our environment much better. 
	I think this is very important and in the future once we deployed to Cloud environments 
	which can help more customers especially during the Black Friday season. 
	so I just stopped fixing the broken unit tests and then start work on migrating to cloud. 

	In the end, i successfully helped migrating our environment from DC to cloud. 
	Then I went back to fix our broken unit tests. The unit tests can be run on cloud pipeline as well. 
   • What is the most difficult situation you have ever faced in your life? How did you handle it?
	it was the time when I was working at previous company. I worked as automation engineer for one year. 
	The work is not challenging so I quit the job without even getting another offer in hand. 
	in Toronto that's hard, the culture is people would like to see your previous experience. 
	since I don't want to do automation anymore, I didn't apply for similar jobs. 
	But the HRs were trying to ask me do you want to be our automation engineer and I said no. 
	and they just hang up the phone. so it was really hard I spent a long long time 
	to find a web app application developer role the current one. 
	so the way to handle it was just keep learning and you need learn a lot of things, 
	doing a lot of side project on your own. just to keep applying for jobs to see there are any opportunities. 
	I need to handle pressure for both financial and mentally but that's a last I was successful
   • Give me an example of a time when you were 75% of the way through a project, and you had to pivot strategy–how were you able to make that into a success story?
	there was a time I was working on the login feature where we are going to use the oracle 
	open ID solution. and at that time the requirement was we're going to abandon the original 
	login 3rd party Okta. I was implementing to creat new classes, new filters, new auth providers 
	to handle the new Way and cleaning up current ones. but before I finish, the requirement 
	was changed that we're still going to use OKTA for a while, we have extended the contract 
	which means my code I need to write again because I'm always done. 
	So i changed the way to implmeent and added a parent class to handle both functionalities 
	at the same time and we can switch between two features. 
	Even we are going to change to another service provider, my code will still work. 
	It was successful, that my code can work same time for different providers.
   • Tell me about a time where you overcame an obstacle and delivered results.
	there was a time we switched from Optimum point to pc optimum point. 
	and a lot of the loyalty related code was updated. but after a while a lot of customers 
	complaining they're not able to redeem points, so I'm working on to fix that. 
	This is a tight deadline because we have a big promotion, so many users will redeem their points. 
	I spent a lot of time looking at the Loyalty related code, but I don't see any issue. 
	I checked all those users on production. Usually a user would have a loyalty membership 
	and a loyalty identity. I find weird some of them loyalty identity. 
	I doubt it could be caused because they are PC Optimum users 
	but they were just registered on PC Optimum, Joe Fresh, PC Express, not on Beauty Boutique. 
	so then when they login beauty, our code syncs the user, there's something wrong with it. 
	and then I just keep bugging very very deep even into the Spring Security Library. 
	I find in Spring's access token provider chain, it couldn't get access token 
	for the oauth rest template. so that's weird then I'm I spend another week probably on it. 
	Then I find us because when the user login there is spring security context holder, 
	we need to update the authority inside of security context holder. 
	because the access token was not issued successfully, so the Sprint security-related library, 
	so the rest API calls would fail. Then also i wrote some code 
	for users who miss those fields to created identity when login. The issue was solved.
*********************************************************************************************************
