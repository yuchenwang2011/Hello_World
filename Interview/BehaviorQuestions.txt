==================公司问题=============================
1. Their product
2. Their future (why they are optimizing)
3. How they can beat their competitors
4. The future of the industry
5. Why do you want to come this company
      Everyone knows xxxx is a great company, it's one of the best companies in the world. If I can get an offer, I can work on a
   something used by millions of people every second around the world. I can learn the lastest techonology. I can work together with 
   most talented people in this world. 
6. Why do you want to work on this role

==================经历问题==============================

1. ==Introduce yourself==
   My name is Yuchen, which you already know. I got my masters degree in 2013. After that I have been working as a software
   engineer. I worked for Bxx for less a year, 3 years for Nxxx, 1 year for Pxxx then now I'm working for Lxxx, which is almost 
   2 years so far. So I have worked on different sizes of companies, worked with different kinds of software.

2. ==Introduce your work at Bxxx,the technology you use==
   When I was there, my team was responsible for providing software for bb factories. You know at that time, bb's market was still not
   as bad as now. Their factory needs to manufacture thousands of products every day. The factory needs a lot of software 
   to do manufactoring and assembling for their phones. So we wrote software and maintain existing software for them. 
   For me, I had 2 main roles, first one was responsible for a few older products, to maintain the existing software. When our customer 
   the factory ask for a requirement, for example, they need change a specific configuration, I would update the code for them.
   Of course I need to guarantee nothing would be broken by my code change.
   My second role was to write some software at my spare cycle. Looking for what kind of thing that everyone on our team can benefit
   from. Duding then I wrote a windows background service running on a server to do the log file cleaning. 
   
   =SubQuestion: Can you describe the software? =
   
   There are tons of log generated everyday for a big department. Before that the manager needs to manually delete those files.
   So I wrote a clean up service running on the server that will start itself automatically to do that cleaning. The user can have
   options to choose which folder they want to clean, how old the files needs to be deleted, the log file destination. 
   The file structure was super complicated, a log of folders, folders nested with folders, different kinds of files in each level.
   It has a lot of things to consider when developing, for example, 
   Some files are hidden, some files needs certain privilege to delete. 
   Logs created 3 months ago should be deleted but if any single file in that nested folder was ever viewed by someone, 
   files in that folder should be protected. someone is currently reading a file, old folder has new files, 
   new folder has old files, what if the service can't finish its job in 24 hours and then a new service is restarted. 

3. ==Introduce your work at Nxxx==
   First I think I need to introduce my department first. We are the most money making department in Nxxxx. We do their most famous
   software router. It's the very big ones, the router used by ATT, verizon, Rogers that kind of router, big like a wall. 
   We build the software running on it. 
   I was working on the switch fabric related area. The switch fabric is a virtual data path 
   that the data, the packets flowing through. We need to guarantee the data path is always working at a high performance level. 
   No packets should be corrupted or dropped during traffic transmission. So I built the related features to monitor the performance
   under different circumstances. There are many chips in the router, different configurations can make a huge difference. So we need 
   to figure out the best paramters for the chips and FPGAs. 
   (There are small sfps, they are in a bigger MDAs, MDAs are in SFPs, then in a chassis. The sfps are connected by optical fibres, then 
   connected to the data generator.
   so there are Level 1 code written by C/C++ to control all those hardware. And we write the Level 2 commmands to connect all those 
   hardware to form an internal data path. Then on the Level 3 we write other features to monitor the performance, to dump data, 
   I was also responsible for mirroring the data)
   
4. ==Introduce your work at Vicxxx==
   I was a research assistant then. My supervisor had a project about improving current OFDM system which based on 802.11a, of course
   now no one would use that. We need to build the packets according to the 11a specification. Then build kinds of modules 
   multiplexer, demultiplexer, sending and receiving, to simualtion the signal transmitting from end to end. 
   The idea of this project is to use polar 
   coordinate instead the regular cartesian coordinate, which could save a lot of calculation of the system. We also combined soft 
   decoder inside of regular hard decoder to get a 3dm performance improvement. We also try something more that instead of floating 
   point calculation, we used fixed point and explored the minimum digits we can use for different situations but can also guarantee 
   the system's performance.

5. ==Introduce your work at Pxxx,the technology you use==
   I was a QA automation engineer there, or a QA developer. I was responsible to maintain the automation framework, 
   which is running every night, in the morning I will need to debug and figure out what fails the tests. 
   When some new feature introduced or some backend api changes, we need update the corresponding automation script. 
   Also there are a lot of manual testings need to be performed by QAs, so my job is to convert the manual testing 
   into automation code. (I left there after worked for a year because I feel the project was not very challenging.)

6. ==Introduce your work at Lxx,the technology you use==
   Do you know lxx, it's the biggest grocery store in Canada, Canada version of Walmart. For LD, we are responsible for 
   building all the e-commerce platforms, enterprise software required for the big company. We have many teams in the company,
   such as grociery, id, membership, bank, searching, fullfillment, AI, mobile. 
   I work on the Drugmart department, which is the Canada's most famous cosmetics and pharmacy store. It's like the CVS. 
   We are building the online shopping website for it. So customers can browse and shop online. Our tech stack frontend is 
   html,css,js,jq,jsp,react. On backend, we use Java, SpringMVC, Oracle. From this year, we are trying to decouple the frontend and 
   backend. We don't want jsp anymore, we want to use react to replace all frontend. So backend now only provide APIs for frontend and 
   mobile apps. 
   I work most of the time as a backend developer. I'm focused on login, checkout, api related features. 
   
   =Sub Question 1: what do you do for login?=
   For example, all the user related features, such as 
   a. if you are a hacker, you have 4 failed login attempt, you will be warned, if you fail 5 times, your account 
   will be temporarily locked. 
   (Details: In the DB, add 3 new fields for the user, attemptCount, activited, lastLoginTimeStamp, every time it has a
   succssful login, it will reset the value. If there is a failure, we count the failure and put it into session. 
   We will use this value in the authenticationFailureHandler. If 4 times, we warn it. If 5 times, 
   we will deactive it the account. When a user login, we will check the lastLoginTimeStamp, when it cools down, 
   the account will be activated.)
   
   b. Also when you register a new account, there will be strength meter under the password form to indicate how strong
   the password is, if it's too weak, we won't let you register.
   (Details: we used an open source library called zxcvbn, give it a string value, it will give a score how strong it is.
   We integrated on the frontend, when the user types in the pwd, it will dynamically give the score and based on the score, 
   we show a meter under the form. If it's too weak, user won't be able to submit the pwd. Backend also integrated passwordping
   api, it will pass the value to password ping server and check if the password is ever been used frequently. Then backend
   throws exception to frontend to fail register)
   
   c. From last year, we started to adopt Oauth2 login. At first we tried integrated Okta as our Oauth2 server. 
   This year we switched to Oracle IDCS service. 
   (Details: Backend will first gather all the attributes and pass to frontend. when the user clicks login, we send a call to 
   the authentication server. We registered our app on oracle. It asks the user to login enter username and password. 
   After success login, the auth server sends us an authorize code, we use the auth code to generate another call to the auth
   server, the server will send us the jwt token, it has a Id token and an access token. We use the id token for membership
   authorization, and the access token will be used to access API.)
   
   =Sub Question 2: what do you do for checkout?=
   a. We need to find out the best checkout flow by integrating google analytics, each button click on the page is recorded, 
   to figure out the best conversion rate. Then based on the analyse to rebuild frontend pages. We also user Adobe target 
   to do A/B test whenever a new feature is going to be released. 
   
   b. We also integrationed 3 sets of cybersource APIs for our credit card checkout. We use cybersource iframe for new credit card 
   payment, and CS simple order API for existing card payment. To prevent fraud, we use CS decision manager and device finger print.
   (iframe Details: frontend will make a call to CS iframe endpoint to get the form confirmation. After that will send backend request 
   to get the required fields. Backend will according to previous checkout steps to generate the corresponsding required fields. 
   then frontend will fill the form with generated data. After click submit, the integrated form will send data to cybersource 
   endpoint, and it will return response with response code. Based on the code, backend will do corresponding order creation.)
   (DM Details: There are so many fraud nowadays. 
   So when CS response with the transaction code, it will have a code, which indicates the )
   
   
   c. I also delivered a Colleague Discount Program. Call an api endpoint, decode. 
   Apply price strategy to qualified cart and entries.  
   
   =Sub Question 3: what do you do for api?=
   First we already have an existing web app, but backend and frontend is not decoupled. We use MVC to pass attributes through
   model to frontend JSP pages. This time we are going to launch a new mobile, so we want to 
   use APIs to support them, and btw decouple frontend and backend as well. 
   First of all we need to discuss with mobile developers, PMs and designers to figure out the requirements, what the response will
   be. Then we look at our current code base to figure out how many APIs we currently have, then we need map them together. 
   Then we know how many exisiting apis we have, and how many we need develop. We need to validate the existing ones to make sure
   they are as wanted. Then we split all the tickets to develop the remaining apis. 
   During the process, we need integrate Swagger UI together, which is our final delivery.
   
   =Sub Question 4: Can you draw the system structure of your web app?=
   https://camo.githubusercontent.com/e45e39c36eebcc4c66e1aecd4e4145112d8e88e3
   /687474703a2f2f692e696d6775722e636f6d2f6a6a3341354e382e706e67
   
7. ==What is your strength?==
   My strengh is that I am a self - starter, I don't need any supervision. I have a very strong sense of ownership.
   I always work my best and hardest to finish my tasks.  
   
8. ==What is your weakness==
   My weakness is that I'm kinda giving myself too much pressure. Not pressure from work, it's the pressure from family, 
   from friends, afraid to left hind. Sometimes got bad mood because of that, can't enjoy life. 
  
9. ==What was your biggest challenge?==
   Well, my biggest challenge was that when I first got hired by Axxxxxx, there was a probation period. I was given 2 month time to 
   finish my first project. I was a fresh graduate then and I didn't know anything about the work my team was doing. They wanted to 
   check if I am a fast learner. So I did my best, reading code to learn the APIs and the coding conventions here, checking twikis
   about things I need to consider, asking people the logic behind the code and asking people about the knowledge of our product,
   writing notes, working overtime to write my own code. So I proved my ability to learn fast and I managed to finish the project
   from scrach to release. 
   
11. ==What can you bring to us?==
    My sense of responsibility. I am a person having a very high standard of myself and want to make my release perfect and free of 
    bugs. I will feel a shame to fail release and not working my best. I've been doing software testing for 3 years, I know how
    to quality control and make my code less bugs. 

12. ==Why do you want to switch to a software developer?==
    Having been working as a software test engineer, I'm a little bit tired. 50% of my word was writing code automations, I like the
    feeling to write code. I like the feeling to create things. I think I like to be a developer better.

13. ==How can you improve your coding ability?==
    For example, during my work, when I have spare time, I don't relax. I would read other people's code, assuming if I were them,
    how I would write my code here. And we do code reviews, I can get feedback from other people, this really helps a lot.  
    I would also spend quite a lot of time to read API documents. The more I'm familiar with it, I can write better code. 

14. ==Why should we hire u? / why do u think urself a good fit for this position?==
    I have worked in a big company for 3 years. So I know how to teamwork with coworkers, how to interact with deverlopers, 
    testers, product managers things like that. I know how to write code of a certain standard. I know how to provide quality
    control and decrease the chance of bugs.
    
15. ==How would other people describe you?==
    People describe me a person with sense of responsibilities. They can trust me and rely on me.
    
16. ==Plans about ur career growth path?==
    I want to be a java expert
    
17. 列举你最近6个月看过的技术方面的书。你常看的技术blog，常去的讨论技术的网站?
18. 有没有自学过什么是后来觉得很有用的；

19. 你想去哪个组，哪个产品，对哪方面感兴趣。当然，如果是面试特定的组，就不会问这个问题。

==================TeamWork==============================

1. Tell me about your teamwork / leadership experience
    Once my team was suddenly notified that we shoud deliver a feature in a month. That was so rush because we are usually 
    notified at least 3 months before release. So I and another team member rose to the accasion. We two took the project 
    and collaborate. He knows configuring the hardware better and I know the feature related knowledge better. 
    Then he wrote the configuring part of the code first then gave them to
    me. I then build my code on top of his, to test the feature. At last, we managed to finish that in time. 
    
    (If not enough, make up an example helping another new guys guiding him through a project.)
    
2. 你怎么跟teammate合作；遇到有人不合作你怎么办；

3. teamwork，obstacle

4. 有没有和队友意见不合闹崩了情况. How was it resolved?

5. 有没有过主动承担队友任务的经历，为什么

7. 合作 teamwork的经历

8. 有没有在一个项目当过领导；

9. 有没有帮助别人的经历 How you help teammate


==================Conflict==============================

1. 有没有做过一些同事已经觉得足够好,但是你觉得还不够好的事. How you insist the highest standard

2. 有没有和领导有过争执.

2. 你想用A方法来实现你负责的这块任务，你老板让你用B方法，但你觉得其实A方法更好，你怎么办? 

3. decision without consulting manager

4. 你的老板如果在出差，你联系不到，你该怎么办?

5. 你和其他小伙伴有冲突或吵架怎么办；

6. team work disagreement

==================Deadline==============================
1. 有没有做过under deadline的项目

2. 你有没有遇到过deadline来不及的情况，你怎么解决的？

3. tight ddl and have to make decision without considering alternatives 

4. 你发现你组里一个组员的任务实际上来不及赶上deadline了，你懂他负责的这块，他可能没有你懂，却以为来得及。
    你们的老板不清楚情况，你该怎么做?
    
5. 你遇到一个问题，有方案A和方案B，必须选一个。它们互有利弊。你时间有限，无法花太多时间考虑，你应该怎么做?

6. 一个如果项目中有很多bug，但是deadline快到期了，你会怎么办? 如果这些bug不重要呢？

7. 项目中最难的地方/最难的项目；

8. DDL 快到了 没做完 该怎么办

9. 有没有过miss deadline，怎么做的；

10. 问了有没有要很短时间内完成一个project的经历，时间不够是因为哪些原因之类的， 突
   然需求改了，需要做的东西就不够了，加班加点，先完成重点需求
   
11. 有一个紧急情况

12. tell me about a time when you have to move fast (make a decision fast)

==================Solve Problem Experience==============================
1. 怎么做重要决定

2. what is the part you don't like a time when you take a calculated risk

3. 自己犯的比较错误的一个decision

4. 有没有对自己的承诺失误过，

5. tell me about a time that you failed

6. 你在现在公司,最大的creative idea是啥；

7. 有没有做过一些你很讨厌做的项目，被迫要做的那种；

8. anything you don't fully understand, but you do it anyway

9. 问了要马上开始做一个你还没有完全理解的project时会怎么办 PM 举个例子

10. How you clarify requirement

11. 项目信息量比较少 该怎么办

12. 有没有走出舒适区的经历

13. 在学习新技术时，你的thought process是怎样的

14. Tell me a time that ur failed?

15. What is your biggest failure?

16. 曾经遇到过的项目中重大改变是什么，你怎么解决的?

17. 印象最深的项目经验

还有两个常见问题就是 1 你从这个项目中学到了什么，有什么是以前不会的？做完之后就会了。

2 有没有make什么wrong decision, 是怎么发现怎么解决的。


18. 对xx公司有什么改进意见？

19. Describe a time you encountered an issue and how you fixed it.

20. when you made a mistake and how you correct it?

21. What is your most successful project? / something you are most proud of
   The project I'm most proud of is that during my work at Nxxx, I wrote a big code automation that can save a lot of effort.
   Before I took that part of testing, every time we introduce a new module, I need to do a lot of manual configurations and write 
   some code specifically for it. Then I used my spare time to write an interface to accept all kinds of modules, every new module
   introduced, I just need to write some basic information into it. And I subtracted the things in common and tests in common as
   a whole, integrate them together. And I integrated the performance check tests that makes checking performance a standard.
   So after I build the system, I can save a lot of time testing new modules.

22. Most challenge project

23. favorite project

24. Describe a situation where you exceeded expectations/did more than required

**********************************Amazon Principles****************************************
   1. 以重视客户为荣，以重视对手为耻
   2. 以担当为荣，以逃避为耻
   3. 以创新为荣，以复杂为耻
   4. 以多元角度为荣，以固守己见为耻
   5. 以好学好奇为荣，以不思进取为耻
   6. 以提高表现为荣，以埋没天才为耻
   7. 以严格标准为荣，以产品缺陷为耻
   8. 以大格局为荣，以小眼界为耻
   9. 以敢干为荣，以慢拍为耻
   10. 以省钱为荣，以花钱为耻
   11. 以尊重员工为荣，以端着架子为耻
   12. 以深究细节为荣，以忽视问题为耻
   13. 以反对为荣，以妥协为耻
   14. 以挺身而出为荣，以发布失败为耻
   
Leadership Principles
Our Leadership Principles aren’t just a pretty inspirational wall hanging. These Principles work hard, just like we do. 
   Amazonians use them, every day, whether they’re discussing ideas for new projects, deciding on the best solution for a customer’s 
   problem, or interviewing candidates. It’s just one of the things that makes Amazon peculiar.

Customer Obsession
   Leaders start with the customer and work backwards. They work vigorously to earn and keep customer trust. 
   Although leaders pay attention to competitors, they obsess over customers.
   1. 以重视客户为荣，以重视对手为耻
   例子:

Ownership
   Leaders are owners. They think long term and don’t sacrifice long-term value for short-term results. 
   They act on behalf of the entire company, beyond just their own team. They never say “that’s not my job". 
   2. 以担当为荣，以逃避为耻
   例子:

Invent and Simplify
   Leaders expect and require innovation and invention from their teams and always find ways to simplify. 
   They are externally aware, look for new ideas from everywhere, and are not limited by “not invented here". 
   As we do new things, we accept that we may be misunderstood for long periods of time.
   3. 以创新为荣，以复杂为耻
   例子:

Are Right, A Lot
   Leaders are right a lot. They have strong judgment and good instincts. They seek diverse perspectives and work 
   to disconfirm their beliefs.
   4. 以多元角度为荣，以固守己见为耻
   例子:

Learn and Be Curious
   Leaders are never done learning and always seek to improve themselves. They are curious about new possibilities and act to explore 
them.
   5. 以好学好奇为荣，以不思进取为耻
   例子:

Hire and Develop The Best
   Leaders raise the performance bar with every hire and promotion. They recognize exceptional talent, 
   and willingly move them throughout the organization. Leaders develop leaders and take seriously their role in coaching others.  
   We work on behalf of our people to invent mechanisms for development like Career Choice.
   6. 以提高表现为荣，以埋没天才为耻
   例子:

Insist on the Highest Standards
   Leaders have relentlessly high standards - many people may think these standards are unreasonably high. 
   Leaders are continually raising the bar and driving their teams to deliver high quality products, services and processes. 
   Leaders ensure that defects do not get sent down the line and that problems are fixed so they stay fixed.
   7. 以严格标准为荣，以产品缺陷为耻
   例子:

Think Big
   Thinking small is a self-fulfilling prophecy. Leaders create and communicate a bold direction that inspires results. 
   They think differently and look around corners for ways to serve customers.
   8. 以大格局为荣，以小眼界为耻
   例子:
   
Bias for Action
   Speed matters in business. Many decisions and actions are reversible and do not need extensive study. 
   We value calculated risk taking. 
   9. 以敢干为荣，以慢拍为耻
   例子:

Frugality
   Accomplish more with less. Constraints breed resourcefulness, self-sufficiency and invention. 
   There are no extra points for growing headcount, budget size or fixed expense.
   10. 以省钱为荣，以花钱为耻
   例子:

Earn Trust
   Leaders listen attentively, speak candidly, and treat others respectfully. They are vocally self-critical, 
   even when doing so is awkward or embarrassing.  Leaders do not believe their or their team’s body odor smells of perfume.  
   They benchmark themselves and their teams against the best.
   11. 以尊重员工为荣，以端着架子为耻
   例子:

Dive Deep
   Leaders operate at all levels, stay connected to the details, audit frequently, and are skeptical when metrics and anecdote differ.
   No task is beneath them.
   12. 以深究细节为荣，以忽视问题为耻
   例子:

Have Backbone; Disagree and Commit
   Leaders are obligated to respectfully challenge decisions when they disagree, even when doing so is uncomfortable or exhausting.
   Leaders have conviction and are tenacious. They do not compromise for the sake of social cohesion. Once a decision is determined, 
   they commit wholly.
   13. 以反对为荣，以妥协为耻
   例子:

Deliver Results
   Leaders focus on the key inputs for their business and deliver them with the right quality and in a timely fashion. 
   Despite setbacks, they rise to the occasion and never settle.
   14. 以挺身而出为荣，以发布失败为耻
   例子:
   
https://www.linkedin.com/pulse/ace-leadership-interview-prakash-krishnan
*********************************************************************************************************

Do you have quesions to ask me?
   For general collegue: can you describe your daily routine?
   For hiring manager: what I can learn from this role?
   For director: what's the expectation for this role? (also ok to ask hiring manager)
                 which one do you prefer, quality or delivery (also ok to ask hiring manager)
   What do you like most about this company/team?
   
   
   
   
一个别人的帖子
刚面完Amazon onsite，巨多巨多的behaviour问题，各种情况的，每轮都有，一个情况还要多个例子，而且要求讲的详细，你做的项目是干什么的，具体实现了什么功能。我这个准备了好几天的人都被问得撑不住了。大家可以多多读一下下面这个文章。具体问题就不透露了，签了协议。



http://kraftshala.com/how-to-raise-the-bar-in-the-amazon-interview/

地里面基本没有什么behaviour问题的样本，所以准备起来好艰难。下面是我准备的一些例子，本来准备每一条准备两个cases，然后14条太多了，写的快死掉了也没写完，大家可以用作样本看看。具体onsite回答的时候根本想不起来哪个对应哪个问题，但是准备的例子多了可以快速先选一个，然后说的时候往问题上套。我也遇到好多没准备的问题，就随便挑一个然后必要时伪造下经历。每个项目具体的流程是什么一定要很清楚，会问得很细，然后才是你干了什么。

Be professional
it’s a pleasure to be here and I am very excited about this opportunity.
Thank you for giving me the opportunity to interview today.
I am very exited to have the opportunity to be interviewed here in Amazon.
Show your curiosity
research the company before interview
come up with two or three reasons you want to work for the company
mission statement, product and service information, principles’s backgrounds
check company financials through US securities and Exchange commision
Know your stuff
use STAR
situation
task
action
results
Leadership principles. check 1point3acres for more.

Amazon
Top Internet Retailing Company
Our vision is to be earth’s most customer-centric company; to build a place where people can come to find and discover anything they might want to buy online
product lines
kindle e-readers
Amazon Prime
Echo
Fire tablets
media
use independent, third-party shippers


situations
news recommendation service
collaborative feature with code editor
email communication improvement
Hubert three way matching
news prediction service
code executing service
Why Amazon?
Amazon is a top internet retailing company with a strong focus on customer experience and obsession. Its motto- work hard, have fun, make history, and it’s vision, earth’s most customer centric company, inspires me. I’m a person who respect hard working and care a lot about customer experience, so the culture of Amazon attracts me a lot. Furthermore, the growth of this company is pretty impressive, it’s not only an online retail shop but also has a wide range of products like Alexa, Kindle, fire tablet and TV, Amazon cloud service, etc. Hundreds of thousands of talented engineers are working passionately here, building innovative system and solving problems at unprecedented scale. Therefore, this is a place where I can learn a lot, and use my skills and experience to make things happen with a team. 

Why choose this position?
The job I have applied is the software development position in Amazon Books, I am interested in this position because:  
First of all, Amazon Books uses innovative technology to merge physical and online worlds into one unique and delightful shopping experience. The concept is really cool and pioneering. I am really excited about learning and using new technologies to create new exceptional experiences that firmly obsess customers.
Secondly, I’d like to work with solutions from a full-stack point of view, by engaging with requirements, frontend, middle tier, backend, storage, and all the other stuff, I can understand problems and solutions thoroughly, and thus scale and optimize them with the best practices. 
Thirdly, I’m happy to work in an environment with a lot of challenges so that I’ll never be boring. In Amazon, I can take ownership of the projects I am truly passionate about. I am sure I can take the challenges and provide successful solutions. 

Introduce yourself
- My name is X. I’ve been working on software design and development related work for past two years. My experience includes communicating and analyzing user requirements, authoring functional requirement documentation and workflows, building wireframes and interactive prototypes, and then helping implement web applications within a team. The web applications I helped design and develop all meet to user needs very well and also have great user experiences and elegant UIs. The modules and features I’ve developed includes document metadata and status management, news tag prediction and recommendation, online collaborative coding platform, etc. I’m especially passionate about working on solutions from a full-stack standpoint, because by understanding user requirements as well as overall system architecture thoroughly, I can deliver products with both great performance and easy-to-use experience. I am also happy to learn new technologies and incorporate them with what I’ve been doing. Keeping learning and being curious always refreshes my mind with better designs and solutions. 


The biggest mistake you made and what did you learn from it?  (earn trust, customer obsession)
The biggest mistake I’ve made happened when I took on and led a project for the first time. I got a requirement from the client about updating parts of a certain workflow. So I documented the requirements, worked on them with the team, and released the update to the demo system on time, however, the client tried and didn’t like it.
We diagnosed the feedback and system immediately, It turned out that we paid a lot of attention on the changes the client requested us to do, but didn’t do much evaluation on other features that are impacted by the change.
I apologized to the client immediately and asked if we could have an extended deliver date. Luckily the client agreed and also showed understanding. Then I called a meeting with all the team members, talked about the feedback, then we walked through the whole workflow step by step together, evaluated all the possible operations that user might take on each step and then tailored the change we were gonna make accordingly. Throughout this process, the team members understood what happened, why the client was not happy, and they also brought up a lot of good opinions. Instead of just telling the team to make changes again, I earned their trust by sharing the feedback with them and working out a solution together.
We then released a tentative version to the demo system before the deadline, walked through it with the client and collected feedback provided. Finally, we delivered the update to the production successfully, our client was very happy and used it every day without any trouble yet.


Most challenging project?
The most challenging project I’ve done was an online collaborative coding platform, it’s like Leetcode but with collaborative feature. The most challenging part was to incorporate collaborative features with the code editor, that is, user in a same coding room can see the real-time cursor movements and typing actions of the other users.
It was challenging because I was supposed to come up with the solution and implement it by myself, and I have never developed something like this before.
So I started with composing a visual solution first, the work I’ve done included researching online collaborative products, listing core features I needed, building wireframes, and designing UI. With the visual solution, I had a good understanding on how the application would work. Then, I googled and read a lot of system design solutions for products with similar features, like Google doc, online chatting room, etc. With what I’ve read, I was able to draft out my own solutions and selected corresponding technologies.
I implemented it successfully within the given time, and my solution received a positive feedback because it is not only working well, but also visually pleasing. Throughout this process, I learned that it is important to be curious and keep learning, try to read as many technical blogs or articles as you can, the more you read, the better you’ll ace a problem or design. The feeling of ownership is very important, some other students just gave up with the excuse “I don’t how to do it"

Couldn’t finish tasks before deadline? 
deliver result, ownership


CUSTOMER OBSESSION: Walk us through a time when you helped a customer through a difficult process and what that looked like.
leaders start with the customer and work backwards. They work vigorously to earn and keep customer trust. Although leaders pay attention to competitors, they obsess over customers.
case 1
Last year in Telamon, I took on and led a project of developing a web application for our Telecom engineering team, in order to help engineers build and manage detail specifications easily for their Telecom installation jobs. The detail specification building process was sort of complex, involving a lot of data entry and field data collection, and the requirement documentation provided to us was brief and totally in text description.
Therefore, it is challenging for me to come up with an intuitive and engineer-friendly design.
In order to understand the process thoroughly, I made several appointments with the engineering team, going through the specification building process with them step by step in detail. Then, I did some field observations, looking at how engineers use their ipads and computers in the field and in the office, when and how they input the data to complete a detail specification. Based on what I’ve learned and observed, I was able to come up with data schemas, draft a working prototype, and bring it to the engineers to collect feedback.
It turned out that the prototype was very helpful, it saved us around 10% time when implementing the web application. After the production was released, the engineers tried and loved it immediately. They said they took less time building a specification now  with less error. The customer was obsessed with our professional process and result, and start to have more business with us.
case 2  (customer obsession and ownership, highest standard)
In Telamon, once I led the team to implement an AP processing service for one of our client - Hubert Corporation. We provide a customized AP processing system as well as a team of AP clerks to help Hubert process their invoices. Since invoices from different vendors might require different ways of processing and our client didn’t have a full instruction for that (they usually process invoices based on their knowledge and familiarity), we had to spend time emailing back and forth dicussing about instructions whenever there was a special invoice processed incorrectly.
I looked at the invoices reported and thought we could do better in managing different invoices, vendors and corresponding instructions, and thus reducing the communication effort put by the client and us.
I first created a shared matrix and recorded all the invoices and instructions provided, and asked our AP clerks to update it as long as there was any new invoice feedback from the client. Then based on the analysis of the matrix, I created a checklist listing certain type of error-prone invoices and asked our AP quality managers to check on these type of invoices every day. Further, I programed and applied notifications for several type of invoices with special instructions in the system, so that our AP clerks didn’t have to watch out for them all the time.
After several weeks of running the service, I scheduled a meeting with the client and reviewed the matrix with them, they were impressed by it. And they even used the matrix as the instructions on their side. After a month or two, we barely got any email about incorrectly processed invoices from the client. We obsessed our client with our great quality and attitude to insist on the highest standards.


OWNERSHIP: Give me a example of when you took a risk and it failed.
leaders are owners. They think long term and don’t sacrifice long-term value for short-term results. They act on behalf of the entire company, beyond just their own team. They never say “That’s not my job”.
case 1
I’d like to talk about one of my project at BitTiger. BitTiger had a bootcamp course for project managers and I was hired as the lead developer to help implement the idea driven by the project managers teamed with me.
Our task was to improve BitTiger's current communication channels between teachers and students, and integrate them more with its official web portal.
Since I was the person who was going to lead another developer to build the product, it was important for me to understand the user needs and the decisions made by the project manager thoroughly. The best way to do so was to actively take part in the decision making process from the very beginning. Therefore, for most of the activities hosted by the project managers, I asked to join them, like, taking notes while the project managers were interviewing with teachers and students, coming up with suggestions while they were discussing about user personas and stories, offering help while they were building wireframes, and joining discussion when they were creating and prioritizing tasks.
I was able to implement the product quickly because I totally understood what the project managers wanted. We didn't need to spend time communicating the requirements again. With the time saved, I was able to add more customized features making the product easier to use. On the demo day, we had a great presentation and received very good reviews.
case 2
the communication feature is not easy to use, only remind the client you received a new message and log in. The client didn't log in to the system very often. Sometimes the client just email back to me saying what happened.
I took the ownership to support this project, I designed a new process by delivering the content to the kitchen designer and bring it to the client to discuss. the client agreed. After deliver, our customer support team has reduced around 70% support request for this project.


INVENT AND SIMPLIFY: Tell me a time when you created an innovative product.
Leaders expect and require innovation and invention from their teams and always find ways to simplify. They are externally aware, look for new ideas from everywhere, and are not limited by "not invented here". As we do new things, we accept that we may be misunderstood for long periods of time.
case 1
question board, BitTiger need to manager a lot of things, like notification, link to the live course, questions, communication. We are overwhelmed at the first about inventing the process, thinking about a lot of ideas like group by different tabs, create with different categories. But I decided to keep it simple and stupid, we create the post for all purpose, but group it by weeks. All important notification on the top.
care more about look and feel rather than a lot of features
case 2
The project we did for hartson kennedy was to help process their drawing and purchase order. The customers  usually order countertops in their stores and kitchen designers then doing the drawings and generate PO paperwork, and send to us. However, the kitchen designer only uses fax machine, but we didn't have fax machine.
Instead of just purchasing a fax machine and assigning a person to handle the scanning everyday, I googled and did a research online first. I found a service that can receive the fax via email. I created a distribution list and registered it as the receiving mailbox.
With the simplified process, we don’t have spend money and time dealing with fax machine and scanning.  I invented and simplified the fax receiving process and saved money for our company.



ARE RIGHT, A LOT: Tell me about a time when you observed two business opportunities to improve ROI, and how did you determine that they were connected.
Leaders are right a lot, they have strong judgment and  good instincts. They seek diverse perspective and work to disconfirm their beliefs.
tell me about a time when you are wrong
tell me about a time when you had to work with incomplete data or information
make a decision, but also consider the opinions of the other people
case 1
we have a indexing team in china that helps enter the data on the invoice, I designed the indexing panel for them. Before making the decision, I decided to talk to the staff who are doing the data entry. Ask them to try and record the time and provide feedback. It turned out that they have some very good point of view, like amount match, required text-box color. And I changed my design and improve 10% processing time.
case 2
once I argue with the manager about issue the corporate email, I want to register emails from MS and Gmail for business use because Telamon email sometimes blocks, and we have to contact Telamon IT which are not very responsible. The manager disagree at first, he said the corporate email is more professional. I collected the issue happened, and the impact on the client, feedback from them, average time IT reach and solve the problem, it turned out that we cannot bare it. then the manager agrees to switch as long as we can get a good domain name. We then applied a domain based on coporate and the name of our department. Everyone is happy.



LEARN AND BE CURIOUS: How do you find the time to stay inspired, acquire new knowledge, innovate in your work?
Leaders are never done learning and always seek to improve themselves. They are curious about new possibilities and act on explore them.
case 1
I recently learned how Redux architecture and how it work
actions, global status, dispatch actions
case 2
how large company deploy their front-end
how to cache


HIRE AND DEVELOP THE BEST: Tell me about a time when you had to deal with a poor performer on your team.
Leaders raise the performance bar with every hire and promotion. They recognize exceptional talent, and willingly move them throughout the organization. Leaders develop leaders and take seriously their in coaching others. We work on behalf of out people to invent mechanisms for development like Career Choice.
case 1
for the data entry team in China, they didn’t care much about the system before. When I led the project, I will  invite them to join the meeting, tell them I we develop the system, teach them how to test and ask them to feel free to give me feedback if they any idea. they are the direct users of the system.
finally these employees are very helpful for testing new features, and improve the efficiency of the indexing.
case 2
When I transferring the projects from one person to another, I will co-work with them for a while, making sure the things they completely get the idea.
. 1point3acres

INSIST ON THE HIGHEST STANDARDS: Tell me about a time when you could have stopped working but persisted.
Leaders have relentlessly high standards - many people may think these standards are unreasonably high. Leaders are continually raising the bar and driving their teams to deliver high quality products, services and processes. Leaders ensure that defects do not get sent down the line and that problems are fixed so they stay fixed.
case 1
hubert three way matching features, we have implemented the feature successfully. But I found the processor took long time to compare the amount of receipt, Purchase order, and invoice, calculate the tolerant percentage, identify any mismatches. I took the initiative to add exception handling features, instead of finding mismatches by eyes, I add a box to input and compare the amounts by the program.
it turned out the efficiency has improved a lot.. check 1point3acres for more.
case 2
client give us the ftp, and overwrite data everyday, sometimes if there is holiday, we may miss one or two load. I write a program to fetch the file and archive the data by date, so that we’ll always have the backup if there is any issue happened.
http://www.codejava.net/java-se/networking/ftp/java-ftp-file-download-tutorial-and-example


THINK BIG: Tell me about a time when you proposed a new business.
Thinking small is a self-fulfilling prophecy. Leaders create and communicate a bold direction that inspires results. They think differently and look around corners for ways to serve customers.
case 1
augmented reality to find store
case 2
ambient building


BIAS FOR ACTION: Describe how you would handle a busy situation where three people are waiting for help from you.
Speed matters in business. Many decisions and actions are reversible and do not need extensive study. We value calculated risk taking.
case 1
the other engineer and I discussed for a couple hours, figured out what we disagreed on, and I suggested that neither answer was necessarily better. She agreed. I said that unless she had any new info, I’d rather we just pick mine, and we could always come back to the decision later if we learned something new.
example??
case 2



FRUGALITY: Tell me about a time where you thought of a clever new way to save money for the company.
dd
case 1
for most of internal tools, we’ll google first instead of developing by ourself.-baidu 1point3acres
case 2
USL, this project is a little hurry, we don’t have enough resources for that. Average of processing one load takes around 4.5min, and we watch all the steps, automatically whatever we can, and reduce the process time to 2 min finally.


EARN TRUST: Tell me a time when you earned trust of a group.
Leaders listen attentively, speak candidly, and treat others respectfully. They are vocally self-critical, even when doing so is awkward or embarrassing. Leaders do not believe their or their team’s body order smells of perfume. They benchmark themselves and their teams against the best.
vocally self critical
The biggest mistake I’ve made happened when I took on and led a project for the first time by myself. I got a requirement from the client about updating parts of a certain workflow. I listed the requirements, developed with the team, and released the update to the demo system on time, however, the client tried and didn’t like it.
I diagnosed the system immediately, It turned out that we paid a lot of attention on the changes the client requested us to do, but didn’t do much evaluation on other features that are impacted by the change. A solid evaluation and design was necessary in this case because all the features in the workflow were closely connected to each other, and even a small change might cause butterfly effect.
I apologized to the client immediately and asked if we could have an extended deliver date. Luckily the client agreed and also showed understanding. Then I called a meeting with the dev team, walked through the whole workflow step by step together, evaluated all the possible operations that user might take on each step and then tailored the change we were gonna make accordingly. We then released a tentative version to the demo system before the deadline , walked through it with the client, and collected any feedback provided.
Finally, we delivered the update to the production successfully, our client was very happy and used it every day without any trouble yet.

DIVE DEEP: Tell me about a time when you had to dive deep into the data and the results you achieved.
trust but verify
you believe the person but check the facts anyway
Leaders operate at all levels, stay connected to the details, audit frequently, and are skeptical when metrics and anecdote differ. No task beneath them.
case



HAVE BACKBONE, DISAGREE AND COMMIT : Tell me about the most difficult interaction you had at work.
Leaders are obligated to respectfully challenge decisions when they disagree, even when doing so is uncomfortable or exhausting. Leaders have conviction and are tenacious. They do not compromise for the sake of social cohesion. Once a decision is determined, they commit wholly.
disagree with boss?
If I have different idea with my manager or boss, I will try to collect data or make a prototype trying to convince him. If I have tried my best and he still disagree, then I would respect his decision and start committing for that.
when we released the service for US Logistics. The client complaint that some invoices were missed. I checked around and found that Telamon Network blocked some of the emails sent by the client. I talked the problem to the network administrator and they couldn’t change the email restrictions due to the policy.
Therefore, I brought this problem up to my manager and suggested to register another business mailbox provided by gmail or microsoft. The manager disagreed at first because he thought it was unprofessional if we didn’t use our own corporate email domain. I thought solving this problem was more important because our client would lose the trust on the quality of our data. In order to convince him, I showed him the data of email missing rate and the impacts on our client, and also I registered a good domain name composed by our company and department name, so we could still be professional on that part.
Finally, the manager was convinced and agreed on my suggestion. We barely have any missed emails after we switched our mailbox. And because of the good result, we started to use the domain for other projects gradually.


DELIVER RESULTS: Tell me about a time where you overcame an obstacle and delivered results.
leaders focus on the key inputs for their business and deliver them with the right quality and in a timely fashion. Despite setbacks, they rise to the occasion and never settle.
what you’d do after you realized you couldn’t hit the date?
First, I’d check every possible way that could possibly make me hit the date, like using after-work time, weekends, or holidays, asking for help or suggestions, finding alternatives or simpler solutions, etc. Since I am the owner of the tasks, it’s my responsibility to deliver results on time. It’s my fault that I underestimated the workload when I took the tasks.
There was one time that we couldn’t finish the troubleshooting of a bug on time, the system should have sent out auto emails at 7:00 am but sometimes it failed. Before solving the problem, I will check each morning and manually trigger emails to the client.
If I still couldn’t hit the date, I would look at features, pick out a few with highest priority that I could finish, and then discuss about the problem with the project manager. Of course, I would apologize first and then try to discuss about the best solution to minimize the impacts. Once the project manager agrees, I would notify all the people that could be impacted by the delay.
